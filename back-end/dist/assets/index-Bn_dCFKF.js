(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function r(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(t){if(t.ep)return;t.ep=!0;const o=r(t);fetch(t.href,o)}})();const it="SensorMonitorDB",ct=1,y="humidityUpdates",f="phUpdates";let g;function dt(){return new Promise((e,n)=>{const r=indexedDB.open(it,ct);r.onerror=s=>{console.error("Error opening IndexedDB:",s.target.errorCode),n(s.target.errorCode)},r.onsuccess=s=>{g=s.target.result,console.log("IndexedDB opened successfully"),e(g)},r.onupgradeneeded=s=>{const t=s.target.result;t.objectStoreNames.contains(f)||(t.createObjectStore(f,{keyPath:"id",autoIncrement:!0}),console.log(`Object store '${f}' created.`)),t.objectStoreNames.contains(y)||(t.createObjectStore(y,{keyPath:"id",autoIncrement:!0}),console.log(`Object store '${y}' created.`))}})}function lt(e){if(!g){console.warn("IndexedDB not open. Cannot save pH data.");return}if(!e||typeof e!="object"){console.warn("Invalid pH data. Not saving to IndexedDB.");return}"id"in e&&delete e.id;const s=g.transaction([f],"readonly").objectStore(f).openCursor(null,"prev");s.onsuccess=t=>{const o=t.target.result;if(o&&o.value.phValue===e.phValue){console.warn("pH data is a duplicate of the immediately previous record. Not saving.");return}const c=g.transaction([f],"readwrite").objectStore(f).add(e);c.onsuccess=()=>{console.log("pH data successfully saved to IndexedDB.")},c.onerror=l=>{console.error("Error saving pH data to IndexedDB:",l.target.errorCode)}},s.onerror=t=>{console.error("Error checking for duplicate pH data in IndexedDB:",t.target.errorCode)}}function ut(e){if(!g){console.warn("IndexedDB not open. Cannot save humidity data.");return}if(!e||typeof e!="object"){console.warn("Invalid humidity data. Not saving to IndexedDB.");return}"id"in e&&delete e.id;const s=g.transaction([y],"readonly").objectStore(y).openCursor(null,"prev");s.onsuccess=t=>{const o=t.target.result;if(o&&o.value.humidityValue===e.humidityValue){console.warn("Humidity data is a duplicate of the immediately previous record. Not saving.");return}const c=g.transaction([y],"readwrite").objectStore(y).add(e);c.onsuccess=()=>{console.log("Humidity data successfully saved to IndexedDB.")},c.onerror=l=>{console.error("Error saving Humidity data to IndexedDB:",l.target.errorCode)}},s.onerror=t=>{console.error("Error checking for duplicate humidityValue in IndexedDB:",t.target.errorCode)}}function Z(e=8){return new Promise((n,r)=>{if(!g){console.warn("IndexedDB not open. Cannot get data."),n([]);return}const o=g.transaction([y],"readonly").objectStore(y).openCursor(null,"prev"),a=[];o.onsuccess=i=>{const c=i.target.result;c&&a.length<e?(a.push(c.value),c.continue()):n(a)},o.onerror=i=>{console.error("Error getting data from IndexedDB:",i.target.errorCode),r(i.target.errorCode)}})}function tt(e=8){return new Promise((n,r)=>{if(!g){console.warn("IndexedDB not open. Cannot get data."),n([]);return}const o=g.transaction([f],"readonly").objectStore(f).openCursor(null,"prev"),a=[];o.onsuccess=i=>{const c=i.target.result;c&&a.length<e&&(a.push(c.value),c.continue())},o.onerror=i=>{console.error("Error getting data from IndexedDB:",i.target.errorCode),r(i.target.errorCode)}})}function mt(e="ph_data.csv"){return new Promise((n,r)=>{if(!g){console.warn("IndexedDB not open. Cannot get data."),r("IndexedDB not open");return}const o=g.transaction([f],"readonly").objectStore(f).openCursor();let a=[],i=[],c=!0;o.onsuccess=l=>{const m=l.target.result;if(m){const u=m.value;c&&(i=Object.keys(u),a.push(i.join(",")),c=!1);const b=i.map(h=>{let d=u[h];return d===null||typeof d>"u"?"":typeof d=="string"&&(d.includes(",")||d.includes('"')||d.includes(`
`))?`"${d.replace(/"/g,'""')}"`:d}).join(",");a.push(b),m.continue()}else{console.log("semua data telah diiterasi");const u=a.join(`
`),b=new Blob([u],{type:"text/csv;charset=utf-8;"}),h=URL.createObjectURL(b),d=document.createElement("a");d.href=h,d.download=e,document.body.appendChild(d),d.click(),document.body.removeChild(d),URL.revokeObjectURL(h),console.log(`Data exported to ${e}`),n()}},o.onerror=l=>{console.error("Error download data from IndexedDB:",l.target.errorCode),r(l.target.errorCode)}})}function pt(e="humidity_data.csv"){return new Promise((n,r)=>{if(!g){console.warn("IndexedDB not open. Cannot get data."),r("IndexedDB not open");return}const o=g.transaction([y],"readonly").objectStore(y).openCursor();let a=[],i=[],c=!0;o.onsuccess=l=>{const m=l.target.result;if(m){const u=m.value;c&&(i=Object.keys(u),a.push(i.join(",")),c=!1);const b=i.map(h=>{let d=u[h];return d===null||typeof d>"u"?"":typeof d=="string"&&(d.includes(",")||d.includes('"')||d.includes(`
`))?`"${d.replace(/"/g,'""')}"`:d}).join(",");a.push(b),m.continue()}else{console.log("semua data telah diiterasi");const u=a.join(`
`),b=new Blob([u],{type:"text/csv;charset=utf-8;"}),h=URL.createObjectURL(b),d=document.createElement("a");d.href=h,d.download=e,document.body.appendChild(d),d.click(),document.body.removeChild(d),URL.revokeObjectURL(h),console.log(`Data exported to ${e}`),n()}},o.onerror=l=>{console.error("Error download data from IndexedDB:",l.target.errorCode),r(l.target.errorCode)}})}const gt="ae2f0qpfo130e-ats.iot.ap-southeast-1.amazonaws.com",et="ap-southeast-1",bt="ap-southeast-1:66f016b1-04c1-4719-8774-bf55d732f161";AWS.config.region=et;AWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:bt});let k;const ht=async()=>{try{await new Promise((n,r)=>{AWS.config.credentials.get(s=>{s?r(s):n()})}),console.log("✅ Cognito Credentials loaded.");const e=yt.getSignedUrl(gt,et,AWS.config.credentials.accessKeyId,AWS.config.credentials.secretAccessKey,AWS.config.credentials.sessionToken);k=mqtt.connect(e,{reconnectPeriod:5e3,clientId:"webclient_"+Math.floor(Math.random()*1e4),protocol:"wss",clean:!0}),k.on("connect",()=>{console.log("✅ MQTT connected")}),k.on("error",n=>{console.error("❌ MQTT Error:",n)})}catch(e){console.error("❌ Gagal load Cognito credentials:",e)}};window.nyalakanPompa=()=>{if(!k||!k.connected){console.error("🚫 MQTT belum terkoneksi. Tidak bisa publish.");return}const e=moment().format("YYYY-MM-DD HH:mm:ss"),n=document.getElementById("flushButton");n.classList.add("opacity-80"),n.disabled=!0,n.textContent="Sending ...",setTimeout(()=>{n.textContent="Flushing ..."},2e3),setTimeout(()=>{n.classList.remove("opacity-80"),n.disabled=!1,n.textContent="Flush"},3e4);const r=JSON.stringify({action:"nyala"});k.publish("device/pompa",r,{qos:1},s=>{s?console.error("🚫 Publish error:",s):console.log("📤 Pompa nyala command dikirim pada",e)})};const yt={getSignedUrl:function(e,n,r,s,t){const o=new Date,a=o.toISOString().slice(0,10).replace(/-/g,""),i=o.toISOString().replace(/[:-]|\.\d{3}/g,""),c="iotdevicegateway",l="AWS4-HMAC-SHA256",m="GET",u="/mqtt",b=a+"/"+n+"/"+c+"/aws4_request",h="X-Amz-Algorithm="+l+"&X-Amz-Credential="+encodeURIComponent(r+"/"+b)+"&X-Amz-Date="+i+"&X-Amz-SignedHeaders=host",d="host:"+e+`
`,P=AWS.util.crypto.sha256("","hex"),N=m+`
`+u+`
`+h+`
`+d+`
host
`+P,C=l+`
`+i+`
`+b+`
`+AWS.util.crypto.sha256(N,"hex"),D=AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac("AWS4"+s,a,"buffer"),n,"buffer"),c,"buffer"),"aws4_request","buffer"),R=AWS.util.crypto.hmac(D,C,"hex");let H="wss://"+e+u+"?"+h+"&X-Amz-Signature="+R;return t&&(H+="&X-Amz-Security-Token="+encodeURIComponent(t)),H}};let v;const ot=()=>{if(v&&v.readyState!==WebSocket.CLOSED&&v.readyState!==WebSocket.CLOSING){console.log("WebSocket sudah aktif. Tidak membuat koneksi baru.");return}const e="wss://chili-monitor-data.andzuru.space";v=new WebSocket(e),v.onopen=async()=>{console.log("✅ WebSocket connected to",e)},v.onmessage=n=>{try{const r=JSON.parse(n.data);console.log("📨 Data diterima:",r);const{topic:s,data:t,chartData:o,timestamp:a}=r,{ph:i,humidity:c}=o||{};let l=null;if(i&&Array.isArray(i.timestamps)&&i.timestamps.length>0){let p=i.timestamps[i.timestamps.length-1];typeof p=="string"&&p?l=new Date(p).toISOString():typeof p=="number"&&!isNaN(p)&&(p<1e10&&(p*=1e3),l=new Date(p).toISOString())}let m=null;if(c&&Array.isArray(c.timestamps)&&c.timestamps.length>0){let p=c.timestamps[c.timestamps.length-1];typeof p=="string"&&p?m=new Date(p).toISOString():typeof p=="number"&&!isNaN(p)&&(p<1e10&&(p*=1e3),m=new Date(p).toISOString())}const u=Date.now(),b=isNaN(Number(a))?0:u-Number(a),h=isNaN(Number(a))?null:new Date(Number(a)+7*60*60*1e3).toISOString(),d=new Date(u+7*60*60*1e3).toISOString();let P,N;t&&(t.Kelembapan!==void 0&&t.Kelembapan!==null&&!isNaN(parseFloat(t.Kelembapan))?(window.latestRecordHumidity={timestampCloudReceived:h,timestampBrowserReceived:d,latency:parseFloat(b),humidityValue:parseFloat(t.Kelembapan),humidityDataReceivedAt:m},P=window.latestRecordHumidity):console.log("Kelembapan tidak ada pembaharuan data"),t.Ph!==void 0&&t.Ph!==null&&!isNaN(parseFloat(t.Ph))?(window.latestRecordPh={timestampCloudReceived:h,timestampBrowserReceived:d,latency:parseFloat(b),phValue:parseFloat(t.Ph),phDataReceivedAt:l},N=window.latestRecordPh):console.log("PH tidak ada pembaharuan data"));const C=parseFloat((t==null?void 0:t.Ph)??"NaN"),D=parseFloat((t==null?void 0:t.Kelembapan)??"NaN"),R=isNaN(C)?"N/A":C.toFixed(1),H=isNaN(D)?"N/A":D.toFixed(1),K=document.getElementById("phValue"),_=document.getElementById("humidityValue"),Y=document.getElementById("ground-good-status"),z=document.getElementById("ground-poor-status");if(!isNaN(C)&&!isNaN(D)&&(C>8.5||C<5.5||D>90||D<10)?(Y.classList.add("hidden"),z.classList.remove("hidden")):(z.classList.add("hidden"),Y.classList.remove("hidden")),K&&(K.textContent=R),_&&(_.textContent=H),o){if(i&&Array.isArray(i.timestamps)&&Array.isArray(i.values)){const p=i.timestamps.map(Number),F=i.values.map(Number);navigator.onLine?(wt(p,F),lt(N)):tt(1).then(T=>{T&&T.length>0&&setTimeout(St,200)})}if(c&&Array.isArray(c.timestamps)&&Array.isArray(c.values)){const p=c.timestamps.map(Number),F=c.values.map(Number);navigator.onLine?(Bt(p,F),ut(P)):Z(1).then(T=>{T&&T.length>0&&setTimeout(Dt,200)})}}}catch(r){console.error("❌ Error parsing WebSocket message:",r)}},v.onerror=n=>{console.error("⚠️ WebSocket error:",n)},v.onclose=n=>{console.warn(`⚠️ WebSocket disconnected. Code: ${n.code}, Reason: ${n.reason}`),setTimeout(()=>{console.log("🔁 Mencoba reconnect WebSocket..."),ot()},5e3)}},G="BEr7RhsHyH-U39qwfNHjCgsxD3_cBFL17xttbkvTWYbavxeJoED-IKkSf1Ui4CUYiIdGsNeknYBqeEjVuIFQgFc";function Q(e){const n="=".repeat((4-e.length%4)%4),r=(e+n).replace(/\-/g,"+").replace(/_/g,"/"),s=window.atob(r),t=new Uint8Array(s.length);for(let o=0;o<s.length;++o)t[o]=s.charCodeAt(o);return t}async function X(e,n){const r="https://chili-monitor-data.andzuru.space/api/save-subscription";console.log("Preparing subscription data for backend...");const s=e.getKey("p256dh"),t=e.getKey("auth");if(!s||!t)throw console.error("Subscription keys are missing"),new Error("Subscription keys are missing");const o={endpoint:e.endpoint,keys:{p256dh:btoa(String.fromCharCode(...new Uint8Array(s))),auth:btoa(String.fromCharCode(...new Uint8Array(t)))}};console.log("Sending subscription to backend:",o);try{const a=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(o)}),i=await a.json();if(!a.ok)throw console.error("Backend subscription error:",i),new Error(i.message||"Failed to send subscription to backend");return console.log("Backend subscription successful:",i),i}catch(a){throw console.error("Subscription error:",a),a}}async function J(e,n){const r="https://chili-monitor-data.andzuru.space/api/delete-subscription",s={endpoint:e};try{const t=await fetch(r,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(s)}),o=await t.json();if(!t.ok)throw new Error(o.message||"Failed to send unsubscription to backend");return console.log("Unsubscription sent to backend successfully:",o),o}catch(t){throw console.error("Error sending unsubscription to backend:",t),t}}async function U(){if(!("serviceWorker"in navigator)||!("PushManager"in window))return{supported:!1,subscribed:!1,error:"Push notification not supported"};try{const n=await(await navigator.serviceWorker.ready).pushManager.getSubscription();return{supported:!0,subscribed:!!n,subscriptionObject:n}}catch{return{supported:!0,subscribed:!1,error:"Failed to check subscription status."}}}function x(e){const n=document.getElementById("subscribeBtn"),r=document.getElementById("subscribeBtnMobile");n&&r&&(e?(n.textContent="Unsubscribe",n.classList.remove("text-primary","hover:text-tersier"),n.classList.add("bg-primary","px-6","text-white","rounded-full","transition-colors","hover:text-primary","hover:bg-white"),r.textContent="Unsubscribe",r.classList.remove("group-hover:text-tersier"),r.classList.add("bg-primary","px-6","text-white","rounded-full","transition-colors","hover:text-primary","hover:bg-white")):(n.textContent="Subscribe",n.classList.remove("bg-primary","px-6","text-white","rounded-full","hover:bg-white","hover:text-primary"),n.classList.add("text-primary","hover:text-tersier"),r.textContent="Subscribe",r.classList.remove("bg-primary","px-6","text-white","rounded-full","hover:bg-white","hover:text-primary"),r.classList.add("group-hover:text-tersier")))}async function ft(){if(!("serviceWorker"in navigator)||!("PushManager"in window)){console.warn("Push notification tidak didukung.");return}try{const e=await navigator.serviceWorker.register("/sw.js");if(console.log("Service Worker terdaftar:",e),await Notification.requestPermission()==="denied"){console.warn("Izin notifikasi tidak diberikan"),x(!1);return}const r=await U();x(r.subscribed)}catch(e){console.error("Gagal setup push notification:",e)}}document.addEventListener("DOMContentLoaded",async()=>{ot(),ht(),dt().then(()=>{}).catch(r=>console.error("Failed to open IndexedDB:",r)),await ft();const e=document.getElementById("subscribeBtn"),n=document.getElementById("subscribeBtnMobile");e&&e.addEventListener("click",async()=>{const r=await U(),s="YOUR_USER_AUTH_TOKEN";if(r.subscribed)try{await J(r.subscriptionObject.endpoint,s),await r.subscriptionObject.unsubscribe(),console.log("Successfully unsubscribed!"),x(!1),alert("You have successfully unsubscribed from push notifications.")}catch(t){console.error("Error unsubscribing:",t),alert("Failed to unsubscribe. Please try again.")}else try{const t=await navigator.serviceWorker.ready,o=Q(G),a=await t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:o});await X(a,s),console.log("Successfully subscribed!"),x(!0),alert("You have successfully subscribed to push notifications!")}catch(t){console.error("Error subscribing:",t),alert("Failed to subscribe. Please ensure notifications are enabled and try again.")}}),n&&n.addEventListener("click",async()=>{const r=await U(),s="YOUR_USER_AUTH_TOKEN";if(r.subscribed)try{await J(r.subscriptionObject.endpoint,s),await r.subscriptionObject.unsubscribe(),console.log("Successfully unsubscribed (Mobile)!"),x(!1),alert("You have successfully unsubscribed from push notifications.")}catch(t){console.error("Error unsubscribing (Mobile):",t),alert("Failed to unsubscribe. Please try again.")}else try{const t=await navigator.serviceWorker.ready,o=Q(G),a=await t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:o});await X(a,s),console.log("Successfully subscribed (Mobile)!"),x(!0),alert("You have successfully subscribed to push notifications!")}catch(t){console.error("Error subscribing (Mobile):",t),alert("Failed to subscribe. Please ensure notifications are enabled and try again.")}})});async function St(){const e=await tt();if(!e||e.length===0){S.data.datasets[0].data=[],S.data.labels=[],S.update();return}const n=e.slice().reverse(),r=n.map(t=>{const o=new Date(t.phDataReceivedAt),a=o.getFullYear(),i=String(o.getMonth()+1).padStart(2,"0"),c=String(o.getDate()).padStart(2,"0"),l=String(o.getHours()).padStart(2,"0"),m=String(o.getMinutes()).padStart(2,"0"),u=String(o.getSeconds()).padStart(2,"0");return`${a}-${i}-${c} ${l}:${m}:${u}`}),s=n.map(t=>t.phValue);S.data.datasets[0].data=s,S.data.labels=r,S.update()}function wt(e,n){function r(t){const o=new Date(t),a=o.getFullYear(),i=String(o.getMonth()+1).padStart(2,"0"),c=String(o.getDate()).padStart(2,"0"),l=String(o.getHours()).padStart(2,"0"),m=String(o.getMinutes()).padStart(2,"0"),u=String(o.getSeconds()).padStart(2,"0");return`${a}-${i}-${c} ${l}:${m}:${u}`}const s=e.map(t=>r(t));S.data.datasets[0].data=n,S.data.labels=s,S.update()}const vt={labels:[],datasets:[{label:"Soil pH",data:[],borderColor:"rgba(75, 192, 192, 1)",backgroundColor:"rgba(75, 192, 192, 0.2)",borderWidth:2}]},Ct={type:"line",data:vt,options:{scales:{y:{beginAtZero:!1}}}},S=new Chart(document.getElementById("myChart1"),Ct);async function Dt(){const e=await Z();if(!e||e.length===0){w.data.datasets[0].data=[],w.data.labels=[],w.update();return}const n=e.slice().reverse(),r=n.map(t=>{const o=new Date(t.humidityDataReceivedAt),a=o.getFullYear(),i=String(o.getMonth()+1).padStart(2,"0"),c=String(o.getDate()).padStart(2,"0"),l=String(o.getHours()).padStart(2,"0"),m=String(o.getMinutes()).padStart(2,"0"),u=String(o.getSeconds()).padStart(2,"0");return`${a}-${i}-${c} ${l}:${m}:${u}`}),s=n.map(t=>t.humidityValue);w.data.datasets[0].data=s,w.data.labels=r,w.update()}function Bt(e,n){function r(t){const o=new Date(t),a=o.getFullYear(),i=String(o.getMonth()+1).padStart(2,"0"),c=String(o.getDate()).padStart(2,"0"),l=String(o.getHours()).padStart(2,"0"),m=String(o.getMinutes()).padStart(2,"0"),u=String(o.getSeconds()).padStart(2,"0");return`${a}-${i}-${c} ${l}:${m}:${u}`}const s=e.map(t=>r(t));console.log(s),w.data.datasets[0].data=n,w.data.labels=s,w.update()}const Et={labels:[],datasets:[{label:"Soil Moisture",data:[],borderColor:"rgba(54, 162, 235, 1)",backgroundColor:"rgba(54, 162, 235, 0.2)",borderWidth:2}]},xt={type:"line",data:Et,options:{scales:{y:{beginAtZero:!1}}}},w=new Chart(document.getElementById("myChart"),xt),j=document.querySelector("#hamburger"),$=document.querySelector("#nav-menu");j.addEventListener("click",function(){j.classList.toggle("hamburger-active"),$.classList.toggle("hidden")});window.addEventListener("click",function(e){e.target!=j&&e.target!=$&&(j.classList.remove("hamburger-active"),$.classList.add("hidden"))});const M=document.getElementById("modal-container-1"),O=document.getElementById("modal-container-2"),L=document.getElementById("modal-confirm-download-container"),A=document.getElementById("modal-confirm-download-alert"),It=document.getElementById("modal-main"),kt=document.getElementById("modal-main-download"),nt=document.getElementById("info-button"),rt=document.getElementById("close-modal"),B=document.getElementById("download-data"),W=document.getElementById("cancel-download"),V=document.getElementById("get-ph-data-modal"),q=document.getElementById("get-humidity-data-modal"),I=document.getElementById("content-download-modal"),st=document.getElementById("title-download-modal");let E=null;nt.addEventListener("click",()=>{M.classList.remove("hidden"),O.classList.remove("hidden")});V.addEventListener("click",()=>{L.classList.remove("hidden"),A.classList.remove("hidden"),E="ph",st.textContent="Download PH Data",I.textContent="Do you want to download the pH data?"});q.addEventListener("click",()=>{L.classList.remove("hidden"),A.classList.remove("hidden"),E="humidity",st.textContent="Download Humidity Data",I.textContent="Do you want to download the humidity data?"});B.addEventListener("click",()=>{E==="ph"?(B.disabled=!0,I.textContent="Mengunduh data pH...",setTimeout(async()=>{await mt()},4e3),setTimeout(()=>{B.disabled=!1,I.textContent="Data pH berhasil diunduh."},1500)):E==="humidity"&&(B.disabled=!0,I.textContent="Mengunduh data kelembapan...",setTimeout(async()=>{await pt()},4e3),setTimeout(()=>{B.disabled=!1,I.textContent="Data humidity berhasil diunduh."},1500)),setTimeout(()=>{L.classList.add("hidden"),A.classList.add("hidden"),E=null},5e3)});W.addEventListener("click",()=>{L.classList.add("hidden"),A.classList.add("hidden"),E=null});rt.addEventListener("click",()=>{M.classList.add("hidden"),O.classList.add("hidden")});window.addEventListener("click",function(e){!L.classList.contains("hidden")&&!A.classList.contains("hidden")?!kt.contains(e.target)&&e.target!==B&&e.target!==W&&e.target!==V&&e.target!==q&&(L.classList.add("hidden"),A.classList.add("hidden"),E=null):!M.classList.contains("hidden")&&!O.classList.contains("hidden")&&!It.contains(e.target)&&e.target!==B&&e.target!==nt&&e.target!==rt&&e.target!==W&&e.target!==V&&e.target!==q&&(M.classList.add("hidden"),O.classList.add("hidden"))});function at(){const e=moment(),n=e.hour(),r=e.minute(),s=e.second(),t=e.format("HH : mm : ss");document.getElementById("clock").textContent=t;let o;n<7||n===7&&r===0&&s===0?o=moment().hour(7).minute(0).second(0):o=moment().add(1,"days").hour(7).minute(0).second(0),n===7&&r===0&&s===0&&nyalakanPompa();const a=moment.duration(o.diff(e)),i=String(a.hours()).padStart(2,"0"),c=String(a.minutes()).padStart(2,"0"),l=String(a.seconds()).padStart(2,"0"),m=`${i}`,u=`${c}`,b=`${l}`;document.getElementById("countdownHour").textContent=m,document.getElementById("countdownMinute").textContent=u,document.getElementById("countdownSecond").textContent=b}setInterval(at,1e3);at();
