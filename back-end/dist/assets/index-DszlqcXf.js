(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const r of t.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&a(r)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const F="SensorMonitorDB",q=1,N="humidityUpdates",L="phUpdates";let g;function j(){return new Promise((n,o)=>{const s=indexedDB.open(F,q);s.onerror=a=>{console.error("Error opening IndexedDB:",a.target.errorCode),o(a.target.errorCode)},s.onsuccess=a=>{g=a.target.result,console.log("IndexedDB opened successfully"),n(g)},s.onupgradeneeded=a=>{const e=a.target.result;if(!e.objectStoreNames.contains("STORE_NAME_2")){const t=e.createObjectStore("STORE_NAME_2",{keyPath:"id",autoIncrement:!0});t.createIndex("timestampCloudReceived","timestampCloudReceived",{unique:!1}),t.createIndex("timestampBrowserReceived","timestampBrowserReceived",{unique:!1}),console.log("Object store 'phUpdates' created.")}if(!e.objectStoreNames.contains("STORE_NAME_1")){const t=e.createObjectStore("STORE_NAME_1",{keyPath:"id",autoIncrement:!0});t.createIndex("timestampCloudReceived","timestampCloudReceived",{unique:!1}),t.createIndex("timestampBrowserReceived","timestampBrowserReceived",{unique:!1}),console.log("Object store 'humidityUpdates' created.")}}})}function U(n){if(!g){console.warn("IndexedDB not open. Cannot save pH data.");return}const a=g.transaction(["STORE_NAME_2"],"readwrite").objectStore("STORE_NAME_2").add(n);a.onsuccess=()=>{},a.onerror=e=>{console.error("Error saving pH data to IndexedDB:",e.target.errorCode)}}function z(n){if(!g){console.warn("IndexedDB not open. Cannot save humidity data.");return}const a=g.transaction(["STORE_NAME_1"],"readwrite").objectStore("STORE_NAME_1").add(n);a.onsuccess=()=>{},a.onerror=e=>{console.error("Error saving humidity data to IndexedDB:",e.target.errorCode)}}function P(n=10){return new Promise((o,s)=>{if(!g){console.warn("IndexedDB not open. Cannot get data."),o([]);return}const t=g.transaction([N],"readonly").objectStore(N).openCursor(null,"prev"),r=[];t.onsuccess=c=>{const i=c.target.result;i&&r.length<n?(r.push(i.value),i.continue()):o(r)},t.onerror=c=>{console.error("Error getting data from IndexedDB:",c.target.errorCode),s(c.target.errorCode)}})}function $(n=10){return new Promise((o,s)=>{if(!g){console.warn("IndexedDB not open. Cannot get data."),o([]);return}const t=g.transaction([L],"readonly").objectStore(L).openCursor(null,"prev"),r=[];t.onsuccess=c=>{const i=c.target.result;i&&r.length<n?(r.push(i.value),i.continue()):o(r)},t.onerror=c=>{console.error("Error getting data from IndexedDB:",c.target.errorCode),s(c.target.errorCode)}})}const V="a2spluztzgsdhl-ats.iot.ap-southeast-1.amazonaws.com",O="ap-southeast-1",Y="ap-southeast-1:e9f502ea-58c5-459a-bfa3-3ce6e1fc9bff";AWS.config.region=O;AWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:Y});let A;const K=async()=>{try{await new Promise((o,s)=>{AWS.config.credentials.get(a=>{a?s(a):o()})}),console.log("✅ Cognito Credentials loaded.");const n=X.getSignedUrl(V,O,AWS.config.credentials.accessKeyId,AWS.config.credentials.secretAccessKey,AWS.config.credentials.sessionToken);A=mqtt.connect(n,{reconnectPeriod:5e3,clientId:"webclient_"+Math.floor(Math.random()*1e4),protocol:"wss",clean:!0}),A.on("connect",()=>{console.log("✅ MQTT connected")}),A.on("error",o=>{console.error("❌ MQTT Error:",o)})}catch(n){console.error("❌ Gagal load Cognito credentials:",n)}};window.nyalakanPompa=()=>{if(!A||!A.connected){console.error("🚫 MQTT belum terkoneksi. Tidak bisa publish.");return}const n=moment().format("YYYY-MM-DD HH:mm:ss"),o=document.getElementById("flushButton");o.classList.add("opacity-80"),o.disabled=!0,o.textContent="Sending ...",setTimeout(()=>{o.textContent="Flushing ..."},2e3),setTimeout(()=>{o.classList.remove("opacity-80"),o.disabled=!1,o.textContent="Flush"},3e4);const s=JSON.stringify({action:"nyala"});A.publish("device/pompa",s,{qos:1},a=>{a?console.error("🚫 Publish error:",a):console.log("📤 Pompa nyala command dikirim pada",n)})};const X={getSignedUrl:function(n,o,s,a,e){const t=new Date,r=t.toISOString().slice(0,10).replace(/-/g,""),c=t.toISOString().replace(/[:-]|\.\d{3}/g,""),i="iotdevicegateway",l="AWS4-HMAC-SHA256",u="GET",d="/mqtt",S=r+"/"+o+"/"+i+"/aws4_request",w="X-Amz-Algorithm="+l+"&X-Amz-Credential="+encodeURIComponent(s+"/"+S)+"&X-Amz-Date="+c+"&X-Amz-SignedHeaders=host",C="host:"+n+`
`,D=AWS.util.crypto.sha256("","hex"),I=u+`
`+d+`
`+w+`
`+C+`
host
`+D,B=l+`
`+c+`
`+S+`
`+AWS.util.crypto.sha256(I,"hex"),T=AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac("AWS4"+a,r,"buffer"),o,"buffer"),i,"buffer"),"aws4_request","buffer"),b=AWS.util.crypto.hmac(T,B,"hex");let y="wss://"+n+d+"?"+w+"&X-Amz-Signature="+b;return e&&(y+="&X-Amz-Security-Token="+encodeURIComponent(e)),y}};let f;const W=()=>{if(f&&f.readyState!==WebSocket.CLOSED&&f.readyState!==WebSocket.CLOSING){console.log("WebSocket sudah aktif. Tidak membuat koneksi baru.");return}const n="wss://chili-monitor.andzuru.space";f=new WebSocket(n),f.onopen=()=>{console.log("✅ WebSocket connected to",n)},f.onmessage=o=>{try{const s=JSON.parse(o.data);console.log("📨 Data diterima:",s);const{topic:a,data:e,chartData:t,timestamp:r}=s;phDataReceivedAt=t.ph.timestamps[t.ph.timestamps.length-1],humidityDataReceivedAt=t.humidity.timestamps[t.humidity.timestamps.length-1];const c=new Date(Date.now()+7*60*60*1e3),i=c-Number(r),l={timestampCloudReceived:r,timestampBrowserReceived:c,latency:parseFloat(i),humidityValue:parseFloat((e==null?void 0:e.Kelembapan)??null),humidityDataReceivedAt},u={timestampCloudReceived:r,timestampBrowserReceived:c,latency:parseFloat(i),phValue:parseFloat((e==null?void 0:e.Ph)??null),phDataReceivedAt};z(l),U(u);const d=parseFloat((e==null?void 0:e.Ph)??null),S=parseFloat((e==null?void 0:e.Kelembapan)??null),w=!isNaN(d)&&typeof d=="number"?d.toFixed(2):"N/A",C=!isNaN(S)&&typeof S=="number"?S.toFixed(2):"N/A",D=document.getElementById("phValue"),I=document.getElementById("humidityValue"),B=document.getElementById("ground-good-status"),T=document.getElementById("ground-poor-status");if(w>8.5||w<5.5||C>90||C<10?(B.classList.add("hidden"),T.classList.remove("hidden")):(T.classList.add("hidden"),B.classList.remove("hidden")),D&&(D.textContent=w),I&&(I.textContent=C),t){const{ph:b,humidity:y}=t;if(b&&Array.isArray(b.timestamps)&&Array.isArray(b.values)){const v=b.timestamps.map(m=>Number(m)),E=b.values.map(m=>Number(m));console.log("📊 pH timestamps:",v),console.log("📊 pH values:",E),$(1).then(m=>{m&&m.length>0?setTimeout(G,200):Q(v,E)})}if(y&&Array.isArray(y.timestamps)&&Array.isArray(y.values)){const v=y.timestamps.map(m=>Number(m)),E=y.values.map(m=>Number(m));console.log("💧 Humidity timestamps:",v),console.log("💧 Humidity values:",E),P(1).then(m=>{m&&m.length>0?setTimeout(tt,200):et(v,E)})}}}catch(s){console.error("❌ Error parsing WebSocket message:",s)}},f.onerror=o=>{console.error("⚠️ WebSocket error:",o)},f.onclose=o=>{console.warn(`⚠️ WebSocket disconnected. Code: ${o.code}, Reason: ${o.reason}`),setTimeout(()=>{console.log("🔁 Mencoba reconnect WebSocket..."),W()},5e3)}};document.addEventListener("DOMContentLoaded",()=>{W(),K(),j().then(()=>{}).catch(n=>console.error("Failed to open IndexedDB:",n))});async function G(){const n=await $(20);if(!n||n.length===0){p.data.datasets[0].data=[],p.data.labels=[],p.update();return}const o=n.slice().reverse(),s=o.map(e=>{const t=new Date(e.phDataReceivedAt),r=t.getFullYear(),c=String(t.getMonth()+1).padStart(2,"0"),i=String(t.getDate()).padStart(2,"0"),l=String(t.getHours()).padStart(2,"0"),u=String(t.getMinutes()).padStart(2,"0"),d=String(t.getSeconds()).padStart(2,"0");return`${r}-${c}-${i} ${l}:${u}:${d}`}),a=o.map(e=>e.phValue);p.data.datasets[0].data=a,p.data.labels=s,p.update()}function Q(n,o){function s(e){const t=new Date(e),r=t.getFullYear(),c=String(t.getMonth()+1).padStart(2,"0"),i=String(t.getDate()).padStart(2,"0"),l=String(t.getHours()).padStart(2,"0"),u=String(t.getMinutes()).padStart(2,"0"),d=String(t.getSeconds()).padStart(2,"0");return`${r}-${c}-${i} ${l}:${u}:${d}`}const a=n.map(e=>s(e));p.data.datasets[0].data=o,p.data.labels=a,p.update()}const J={labels:[],datasets:[{label:"Soil pH",data:[],borderColor:"rgba(75, 192, 192, 1)",backgroundColor:"rgba(75, 192, 192, 0.2)",borderWidth:2}]},Z={type:"bar",data:J,options:{scales:{y:{beginAtZero:!0}}}},p=new Chart(document.getElementById("myChart1"),Z);async function tt(){const n=await P(20);if(!n||n.length===0){h.data.datasets[0].data=[],h.data.labels=[],h.update();return}const o=n.slice().reverse(),s=o.map(e=>{const t=new Date(e.humidityDataReceivedAt),r=t.getFullYear(),c=String(t.getMonth()+1).padStart(2,"0"),i=String(t.getDate()).padStart(2,"0"),l=String(t.getHours()).padStart(2,"0"),u=String(t.getMinutes()).padStart(2,"0"),d=String(t.getSeconds()).padStart(2,"0");return`${r}-${c}-${i} ${l}:${u}:${d}`}),a=o.map(e=>e.phValue);h.data.datasets[0].data=a,h.data.labels=s,h.update()}function et(n,o){function s(e){const t=new Date(e),r=t.getFullYear(),c=String(t.getMonth()+1).padStart(2,"0"),i=String(t.getDate()).padStart(2,"0"),l=String(t.getHours()).padStart(2,"0"),u=String(t.getMinutes()).padStart(2,"0"),d=String(t.getSeconds()).padStart(2,"0");return`${r}-${c}-${i} ${l}:${u}:${d}`}const a=n.map(e=>s(e));console.log(a),h.data.datasets[0].data=o,h.data.labels=a,h.update()}const ot={labels:[],datasets:[{label:"Soil Moisture",data:[],borderColor:"rgba(54, 162, 235, 1)",backgroundColor:"rgba(54, 162, 235, 0.2)",borderWidth:2}]},nt={type:"bar",data:ot,options:{scales:{y:{beginAtZero:!0}}}},h=new Chart(document.getElementById("myChart"),nt),M=document.querySelector("#hamburger"),R=document.querySelector("#nav-menu");M.addEventListener("click",function(){M.classList.toggle("hamburger-active"),R.classList.toggle("hidden")});window.addEventListener("click",function(n){n.target!=M&&n.target!=R&&(M.classList.remove("hamburger-active"),R.classList.add("hidden"))});const H=document.getElementById("modal-container-1"),x=document.getElementById("modal-container-2"),at=document.getElementById("modal-main"),k=document.getElementById("info-button"),st=document.getElementById("close-modal");k.addEventListener("click",()=>{H.classList.remove("hidden"),x.classList.remove("hidden")});st.addEventListener("click",()=>{H.classList.add("hidden"),x.classList.add("hidden")});window.addEventListener("click",function(n){!at.contains(n.target)&&!k.contains(n.target)&&(H.classList.add("hidden"),x.classList.add("hidden"))});function _(){const n=moment(),o=n.hour(),s=n.minute(),a=n.second(),e=n.format("HH : mm : ss");document.getElementById("clock").textContent=e;let t;o<7||o===7&&s===0&&a===0?t=moment().hour(7).minute(0).second(0):t=moment().add(1,"days").hour(7).minute(0).second(0),o===7&&s===0&&a===0&&nyalakanPompa();const r=moment.duration(t.diff(n)),c=String(r.hours()).padStart(2,"0"),i=String(r.minutes()).padStart(2,"0"),l=String(r.seconds()).padStart(2,"0"),u=`${c}`,d=`${i}`,S=`${l}`;document.getElementById("countdownHour").textContent=u,document.getElementById("countdownMinute").textContent=d,document.getElementById("countdownSecond").textContent=S}setInterval(_,1e3);_();
