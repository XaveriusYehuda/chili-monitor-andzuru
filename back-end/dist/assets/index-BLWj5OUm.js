(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&a(r)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();const vt="SensorMonitorDB",Dt=1,w="humidityUpdates",v="phUpdates";let y;function kt(){return new Promise((t,n)=>{const s=indexedDB.open(vt,Dt);s.onerror=a=>{console.error("Error opening IndexedDB:",a.target.errorCode),n(a.target.errorCode)},s.onsuccess=a=>{y=a.target.result,console.log("IndexedDB opened successfully"),t(y)},s.onupgradeneeded=a=>{const e=a.target.result;e.objectStoreNames.contains(v)||(e.createObjectStore(v,{keyPath:"id",autoIncrement:!0}),console.log(`Object store '${v}' created.`)),e.objectStoreNames.contains(w)||(e.createObjectStore(w,{keyPath:"id",autoIncrement:!0}),console.log(`Object store '${w}' created.`))}})}function It(t){if(!y){console.warn("IndexedDB not open. Cannot save pH data.");return}if(!t||typeof t!="object"){console.warn("Invalid pH data. Not saving to IndexedDB.");return}"id"in t&&delete t.id;const a=y.transaction([v],"readonly").objectStore(v).openCursor(null,"prev");a.onsuccess=e=>{const o=e.target.result;if(o&&o.value.phValue===t.phValue){console.warn("pH data is a duplicate of the immediately previous record. Not saving.");return}const c=y.transaction([v],"readwrite").objectStore(v).add(t);c.onsuccess=()=>{console.log("pH data successfully saved to IndexedDB.")},c.onerror=d=>{console.error("Error saving pH data to IndexedDB:",d.target.errorCode)}},a.onerror=e=>{console.error("Error checking for duplicate pH data in IndexedDB:",e.target.errorCode)}}function Ct(t){if(!y){console.warn("IndexedDB not open. Cannot save humidity data.");return}if(!t||typeof t!="object"){console.warn("Invalid humidity data. Not saving to IndexedDB.");return}"id"in t&&delete t.id;const a=y.transaction([w],"readonly").objectStore(w).openCursor(null,"prev");a.onsuccess=e=>{const o=e.target.result;if(o&&o.value.humidityValue===t.humidityValue){console.warn("Humidity data is a duplicate of the immediately previous record. Not saving.");return}const c=y.transaction([w],"readwrite").objectStore(w).add(t);c.onsuccess=()=>{console.log("Humidity data successfully saved to IndexedDB.")},c.onerror=d=>{console.error("Error saving Humidity data to IndexedDB:",d.target.errorCode)}},a.onerror=e=>{console.error("Error checking for duplicate humidityValue in IndexedDB:",e.target.errorCode)}}function dt(t=8){return new Promise((n,s)=>{if(!y){console.warn("IndexedDB not open. Cannot get data."),n([]);return}const o=y.transaction([w],"readonly").objectStore(w).openCursor(null,"prev"),r=[];o.onsuccess=i=>{const c=i.target.result;c&&r.length<t?(r.push(c.value),c.continue()):n(r)},o.onerror=i=>{console.error("Error getting data from IndexedDB:",i.target.errorCode),s(i.target.errorCode)}})}function lt(t=8){return new Promise((n,s)=>{if(!y){console.warn("IndexedDB not open. Cannot get data."),n([]);return}const o=y.transaction([v],"readonly").objectStore(v).openCursor(null,"prev"),r=[];o.onsuccess=i=>{const c=i.target.result;c&&r.length<t&&(r.push(c.value),c.continue())},o.onerror=i=>{console.error("Error getting data from IndexedDB:",i.target.errorCode),s(i.target.errorCode)}})}function Et(t="ph_data.csv"){return new Promise((n,s)=>{if(!y){console.warn("IndexedDB not open. Cannot get data."),s("IndexedDB not open");return}const o=y.transaction([v],"readonly").objectStore(v).openCursor();let r=[],i=[],c=!0;o.onsuccess=d=>{const m=d.target.result;if(m){const l=m.value;c&&(i=Object.keys(l),r.push(i.join(",")),c=!1);const p=i.map(f=>{let u=l[f];return u===null||typeof u>"u"?"":typeof u=="string"&&(u.includes(",")||u.includes('"')||u.includes(`
`))?`"${u.replace(/"/g,'""')}"`:u}).join(",");r.push(p),m.continue()}else{console.log("semua data telah diiterasi");const l=r.join(`
`),p=new Blob([l],{type:"text/csv;charset=utf-8;"}),f=URL.createObjectURL(p),u=document.createElement("a");u.href=f,u.download=t,document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(f),console.log(`Data exported to ${t}`),n()}},o.onerror=d=>{console.error("Error download data from IndexedDB:",d.target.errorCode),s(d.target.errorCode)}})}function Bt(t="humidity_data.csv"){return new Promise((n,s)=>{if(!y){console.warn("IndexedDB not open. Cannot get data."),s("IndexedDB not open");return}const o=y.transaction([w],"readonly").objectStore(w).openCursor();let r=[],i=[],c=!0;o.onsuccess=d=>{const m=d.target.result;if(m){const l=m.value;c&&(i=Object.keys(l),r.push(i.join(",")),c=!1);const p=i.map(f=>{let u=l[f];return u===null||typeof u>"u"?"":typeof u=="string"&&(u.includes(",")||u.includes('"')||u.includes(`
`))?`"${u.replace(/"/g,'""')}"`:u}).join(",");r.push(p),m.continue()}else{console.log("semua data telah diiterasi");const l=r.join(`
`),p=new Blob([l],{type:"text/csv;charset=utf-8;"}),f=URL.createObjectURL(p),u=document.createElement("a");u.href=f,u.download=t,document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(f),console.log(`Data exported to ${t}`),n()}},o.onerror=d=>{console.error("Error download data from IndexedDB:",d.target.errorCode),s(d.target.errorCode)}})}const xt="ae2f0qpfo130e-ats.iot.ap-southeast-1.amazonaws.com",ut="ap-southeast-1",Lt="ap-southeast-1:66f016b1-04c1-4719-8774-bf55d732f161";AWS.config.region=ut;AWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:Lt});let H;const At=async()=>{try{await new Promise((n,s)=>{AWS.config.credentials.get(a=>{a?s(a):n()})}),console.log("✅ Cognito Credentials loaded.");const t=Tt.getSignedUrl(xt,ut,AWS.config.credentials.accessKeyId,AWS.config.credentials.secretAccessKey,AWS.config.credentials.sessionToken);H=mqtt.connect(t,{reconnectPeriod:5e3,clientId:"webclient_"+Math.floor(Math.random()*1e4),protocol:"wss",clean:!0}),H.on("connect",()=>{console.log("✅ MQTT connected")}),H.on("error",n=>{console.error("❌ MQTT Error:",n)})}catch(t){console.error("❌ Gagal load Cognito credentials:",t)}};window.nyalakanPompa=()=>{if(!H||!H.connected){console.error("🚫 MQTT belum terkoneksi. Tidak bisa publish.");return}const t=moment().format("YYYY-MM-DD HH:mm:ss"),n=document.getElementById("flushButton");n.classList.add("opacity-80"),n.disabled=!0,n.textContent="Sending ...",setTimeout(()=>{n.textContent="Flushing ..."},2e3),setTimeout(()=>{n.classList.remove("opacity-80"),n.disabled=!1,n.textContent="Flush"},3e4);const s=JSON.stringify({action:"nyala"});H.publish("device/pompa",s,{qos:1},a=>{a?console.error("🚫 Publish error:",a):console.log("📤 Pompa nyala command dikirim pada",t)})};const Tt={getSignedUrl:function(t,n,s,a,e){const o=new Date,r=o.toISOString().slice(0,10).replace(/-/g,""),i=o.toISOString().replace(/[:-]|\.\d{3}/g,""),c="iotdevicegateway",d="AWS4-HMAC-SHA256",m="GET",l="/mqtt",p=r+"/"+n+"/"+c+"/aws4_request",f="X-Amz-Algorithm="+d+"&X-Amz-Credential="+encodeURIComponent(s+"/"+p)+"&X-Amz-Date="+i+"&X-Amz-SignedHeaders=host",u="host:"+t+`
`,A=AWS.util.crypto.sha256("","hex"),O=m+`
`+l+`
`+f+`
`+u+`
host
`+A,C=d+`
`+i+`
`+p+`
`+AWS.util.crypto.sha256(O,"hex"),E=AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac("AWS4"+a,r,"buffer"),n,"buffer"),c,"buffer"),"aws4_request","buffer"),K=AWS.util.crypto.hmac(E,C,"hex");let R="wss://"+t+l+"?"+f+"&X-Amz-Signature="+K;return e&&(R+="&X-Amz-Security-Token="+encodeURIComponent(e)),R}};function nt(t,n){const s=[],a={};t.forEach(o=>{const r=new Date(o.timestamp);new Date(r.getTime()+7*60*60*1e3);const i=r.getHours().toString().padStart(2,"0")+":00",c=o[n];c&&typeof c.average=="number"&&(a[i]=parseFloat(c.average.toFixed(2)))});let e=null;for(let o=0;o<24;o++){const r=o.toString().padStart(2,"0")+":00";a[r]!=null&&(e=a[r]),s.push({time:r,value:e!==null?e:null})}return s}let h,F=!1,j=!1;const Nt=()=>{const t=sessionStorage.getItem("currentView"),n=sessionStorage.getItem("humidityDetailData");t==="second"&&n==="true"?F=!0:t==="second"&&n==="false"&&(F=!1)};function Ht(){h&&h.readyState===WebSocket.OPEN?(h.send(JSON.stringify({action:"getHistoryData"})),j=!1):j=!0}const mt=()=>{if(h&&h.readyState!==WebSocket.CLOSED&&h.readyState!==WebSocket.CLOSING){console.log("WebSocket sudah aktif. Tidak membuat koneksi baru.");return}const t="wss://chili-monitor-data.andzuru.space";h=new WebSocket(t),h.onopen=async()=>{console.log("✅ WebSocket connected to",t),j&&(h.send(JSON.stringify({action:"getHistoryData"})),j=!1)},h.onmessage=n=>{try{const s=JSON.parse(n.data);if(console.log("📨 Data diterima:",s),s.topic==="historicalData"){const g=s.data;if(console.log(g),F===!0){if(g&&Array.isArray(g)){const S=nt(g,"kelembapan");console.log(S);const D=S.map(B=>B.time),Y=S.map(B=>B.value);ct(D,Y)}}else if(g&&Array.isArray(g)){const S=nt(g,"ph");console.log(S);const D=S.map(B=>B.time),Y=S.map(B=>B.value);ct(D,Y)}}const{topic:a,data:e,chartData:o,timestamp:r}=s,{ph:i,humidity:c}=o||{};let d=null;if(i&&Array.isArray(i.timestamps)&&i.timestamps.length>0){let g=i.timestamps[i.timestamps.length-1];typeof g=="string"&&g?d=new Date(g).toISOString():typeof g=="number"&&!isNaN(g)&&(g<1e10&&(g*=1e3),d=new Date(g).toISOString())}let m=null;if(c&&Array.isArray(c.timestamps)&&c.timestamps.length>0){let g=c.timestamps[c.timestamps.length-1];typeof g=="string"&&g?m=new Date(g).toISOString():typeof g=="number"&&!isNaN(g)&&(g<1e10&&(g*=1e3),m=new Date(g).toISOString())}const l=Date.now(),p=isNaN(Number(r))?0:l-Number(r),f=isNaN(Number(r))?null:new Date(Number(r)+7*60*60*1e3).toISOString(),u=new Date(l+7*60*60*1e3).toISOString();let A,O;e&&(e.Kelembapan!==void 0&&e.Kelembapan!==null&&!isNaN(parseFloat(e.Kelembapan))?(window.latestRecordHumidity={timestampCloudReceived:f,timestampBrowserReceived:u,latency:parseFloat(p),humidityValue:parseFloat(e.Kelembapan),humidityDataReceivedAt:m},A=window.latestRecordHumidity):console.log("Kelembapan tidak ada pembaharuan data"),e.Ph!==void 0&&e.Ph!==null&&!isNaN(parseFloat(e.Ph))?(window.latestRecordPh={timestampCloudReceived:f,timestampBrowserReceived:u,latency:parseFloat(p),phValue:parseFloat(e.Ph),phDataReceivedAt:d},O=window.latestRecordPh):console.log("PH tidak ada pembaharuan data"));const C=parseFloat((e==null?void 0:e.Ph)??"NaN"),E=parseFloat((e==null?void 0:e.Kelembapan)??"NaN"),K=isNaN(C)?"N/A":C.toFixed(1),R=isNaN(E)?"N/A":E.toFixed(1),Z=document.getElementById("phValue"),tt=document.getElementById("humidityValue"),et=document.getElementById("ground-good-status"),ot=document.getElementById("ground-poor-status");if(!isNaN(C)&&!isNaN(E)&&(C>9.5||C<5||E>90||E<10)?(et.classList.add("hidden"),ot.classList.remove("hidden")):(ot.classList.add("hidden"),et.classList.remove("hidden")),Z&&(Z.textContent=K),tt&&(tt.textContent=R),o){if(i&&Array.isArray(i.timestamps)&&Array.isArray(i.values)){const g=i.timestamps.map(Number),S=i.values.map(Number);navigator.onLine?(Wt(g,S),It(O)):lt(1).then(D=>{D&&D.length>0&&setTimeout(jt,200)})}if(c&&Array.isArray(c.timestamps)&&Array.isArray(c.values)){const g=c.timestamps.map(Number),S=c.values.map(Number);navigator.onLine?(qt(g,S),Ct(A)):dt(1).then(D=>{D&&D.length>0&&setTimeout($t,200)})}}}catch(s){console.error("❌ Error parsing WebSocket message:",s)}},h.onerror=n=>{console.error("⚠️ WebSocket error:",n)},h.onclose=n=>{console.warn(`⚠️ WebSocket disconnected. Code: ${n.code}, Reason: ${n.reason}`),setTimeout(()=>{console.log("🔁 Mencoba reconnect WebSocket..."),mt()},5e3)}},st="BEr7RhsHyH-U39qwfNHjCgsxD3_cBFL17xttbkvTWYbavxeJoED-IKkSf1Ui4CUYiIdGsNeknYBqeEjVuIFQgFc";function at(t){const n="=".repeat((4-t.length%4)%4),s=(t+n).replace(/\-/g,"+").replace(/_/g,"/"),a=window.atob(s),e=new Uint8Array(a.length);for(let o=0;o<a.length;++o)e[o]=a.charCodeAt(o);return e}async function rt(t,n){if(!n)throw console.error("No auth token found"),new Error("Authentication token is missing.");const s="https://chili-monitor-data.andzuru.space/api/save-subscription";console.log("Preparing subscription data for backend...");const a=t.getKey("p256dh"),e=t.getKey("auth");if(!a||!e)throw console.error("Subscription keys are missing"),new Error("Subscription keys are missing");const o={endpoint:t.endpoint,keys:{p256dh:btoa(String.fromCharCode(...new Uint8Array(a))),auth:btoa(String.fromCharCode(...new Uint8Array(e)))}};console.log("Sending subscription to backend:",o);try{const r=await fetch(s,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(o)}),i=await r.json();if(!r.ok)throw console.error("Backend subscription error:",i),new Error(i.message||"Failed to send subscription to backend");return console.log("Backend subscription successful:",i),i}catch(r){throw console.error("Subscription error:",r),r}}async function it(t,n){if(!n)throw console.error("No auth token found"),new Error("Authentication token is missing.");const s="https://chili-monitor-data.andzuru.space/api/delete-subscription",a={endpoint:t};try{const e=await fetch(s,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(a)}),o=await e.json();if(!e.ok)throw new Error(o.message||"Failed to send unsubscription to backend");return console.log("Unsubscription sent to backend successfully:",o),o}catch(e){throw console.error("Error sending unsubscription to backend:",e),e}}async function z(){if(!("serviceWorker"in navigator)||!("PushManager"in window))return{supported:!1,subscribed:!1,error:"Push notification not supported"};try{const n=await(await navigator.serviceWorker.ready).pushManager.getSubscription();return{supported:!0,subscribed:!!n,subscriptionObject:n}}catch{return{supported:!0,subscribed:!1,error:"Failed to check subscription status."}}}function T(t){const n=document.getElementById("subscribeBtn"),s=document.getElementById("subscribeBtnMobile");n&&s&&(t?(n.textContent="Unsubscribe",n.classList.remove("text-primary","hover:text-tersier"),n.classList.add("bg-primary","px-6","text-white","rounded-full","transition-colors","hover:text-primary","hover:bg-white"),s.textContent="Unsubscribe",s.classList.remove("group-hover:text-tersier"),s.classList.add("bg-primary","px-6","text-white","rounded-full","transition-colors","hover:text-primary","hover:bg-white")):(n.textContent="Subscribe",n.classList.remove("bg-primary","px-6","text-white","rounded-full","hover:bg-white","hover:text-primary"),n.classList.add("text-primary","hover:text-tersier"),s.textContent="Subscribe",s.classList.remove("bg-primary","px-6","text-white","rounded-full","hover:bg-white","hover:text-primary"),s.classList.add("group-hover:text-tersier")))}async function Mt(){if(!("serviceWorker"in navigator)||!("PushManager"in window)){console.warn("Push notification tidak didukung.");return}try{const t=await navigator.serviceWorker.register("/sw.js");if(console.log("Service Worker terdaftar:",t),await Notification.requestPermission()==="denied"){console.warn("Izin notifikasi tidak diberikan"),T(!1);return}const s=await z();T(s.subscribed)}catch(t){console.error("Gagal setup push notification:",t)}}function Pt(t=8){return Math.random().toString(36).substring(2,2+t)}function b(t,n){const s=document.getElementById("modal-notif-container"),a=document.getElementById("modal-notif-alert"),e=document.getElementById("modal-main-notif"),o=document.getElementById("title-notif-modal"),r=document.getElementById("content-notif-modal"),i=document.getElementById("close-notif");if(!s||!a||!e||!r||!i){console.error("Modal elements not found in the DOM");return}r.textContent=n,o.textContent=t,s.classList.remove("hidden"),a.classList.remove("hidden"),i.onclick=()=>{s.classList.add("hidden"),a.classList.add("hidden")},window.onclick=c=>{!e.contains(c.target)&&c.target===s&&(s.classList.add("hidden"),a.classList.add("hidden"))}}async function gt(t=0){if(t>=5)return console.error("Failed to auto-register after multiple attempts due to duplicate username/email."),b("Registration Failed","Failed to auto-register after multiple attempts due to duplicate username/email."),!1;const s=Pt(6),a=`user${s}`,e=`user${s}@example.com`,o="password123";try{console.log(`Attempting to register with: Username=${a}, Email=${e}`);const r=await fetch("https://chili-monitor-data.andzuru.space/api/register-auto-login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:a,email:e,password:o})}),i=await r.json();if(r.ok&&i.success)return console.log("Registration successful, token received:",i.token),localStorage.setItem("userToken",i.token),localStorage.setItem("userToken_createdAt",Date.now()),b("Registration Successful","Registration successful! You have automatically logged in."),!0;if(r.status===409)return console.warn("Username or email already exists. Retrying with new random values."),gt(t+1);{console.error("Registration failed:",i.message||"Unknown error",i);const c="Registration Failed",d=`Registration failed: ${i.message||"An error occurred during registration."}`;return b(c,d),!1}}catch(r){return console.error("Error during registration:",r),b("Registration Failed","An error occurred during registration."),!1}}function Ft(t){if(!t)return!1;try{const n=t.split(".");if(n.length!==3)return!1;const s=JSON.parse(atob(n[1]));if(s.exp){const a=Math.floor(Date.now()/1e3);if(s.exp<a)return console.log("Token expired locally."),!1}return!0}catch(n){return console.error("Error decoding or validating token locally:",n),!1}}function pt(){W.classList.add("hidden"),U.classList.remove("hidden"),sessionStorage.setItem("currentView","second")}function Ot(){U.classList.add("hidden"),W.classList.remove("hidden"),sessionStorage.setItem("currentView","main")}document.addEventListener("DOMContentLoaded",async()=>{if(Nt(),mt(),At(),kt().then(()=>{}).catch(d=>console.error("Failed to open IndexedDB:",d)),sessionStorage.getItem("currentView")==="second"){W.classList.add("hidden"),U.classList.remove("hidden"),console.log("web dalam tampilan second view, bersiap mengirim getHistoryData");try{Ht()}catch(d){console.log("terjadi error saat mengirimkan getHistoryData :",d)}}else W.classList.remove("hidden"),U.classList.add("hidden"),sessionStorage.removeItem("humidityDetailData");let n=localStorage.getItem("userToken"),s=localStorage.getItem("userToken_createdAt");const a=24*60*60*1e3;if(n&&Ft(n)&&Date.now()-s<a)console.log("Valid user token found in localStorage:",n);else if(console.log("No valid user token found or token expired/too old. Attempting to auto-register and login."),localStorage.removeItem("userToken"),localStorage.removeItem("userToken_createdAt"),await gt())n=localStorage.getItem("userToken"),console.log("Auto-registration and login successful. New Token:",n);else{console.error("Auto-registration and login failed. User cannot proceed without a token."),b("Registration Failed","Failed to obtain a user session. Certain functions may not work.");return}await Mt();const e=document.getElementById("subscribeBtn"),o=document.getElementById("subscribeBtnMobile");e&&e.addEventListener("click",async()=>{const d=localStorage.getItem("userToken");if(!d){b("Subscription Failed","User session not found. Please refresh the page to get a new session.");return}const m=await z();if(m.subscribed)try{await it(m.subscriptionObject.endpoint,d),await m.subscriptionObject.unsubscribe(),console.log("Successfully unsubscribed!"),T(!1),b("Successfully Unsubscribed","You have successfully unsubscribed from push notifications.")}catch(l){console.error("Error unsubscribing:",l),b("Unsubscription Failed","Failed to unsubscribe. Please try again.")}else try{const l=await navigator.serviceWorker.ready,p=at(st),f=await l.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:p});await rt(f,d),console.log("Successfully subscribed!"),T(!0),b("Successful Subscription","You have successfully subscribed to push notifications!")}catch(l){console.error("Error subscribing:",l),b("Subscription Failed","Failed to subscribe. Please ensure notifications are enabled and try again.")}}),o&&o.addEventListener("click",async()=>{const d=localStorage.getItem("userToken");if(!d){b("Unsubscription Failed","User session not found. Please refresh the page to get a new session.");return}const m=await z();if(m.subscribed)try{await it(m.subscriptionObject.endpoint,d),await m.subscriptionObject.unsubscribe(),console.log("Successfully unsubscribed (Mobile)!"),T(!1),b("Unsubscription Failed","You have successfully unsubscribed from push notifications.")}catch(l){console.error("Error unsubscribing (Mobile):",l),b("Unsubscription Failed","Failed to unsubscribe. Please try again.")}else try{const l=await navigator.serviceWorker.ready,p=at(st),f=await l.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:p});await rt(f,d),console.log("Successfully subscribed (Mobile)!"),T(!0),b("Successfully subscribed (Mobile)!","You have successfully subscribed to push notifications!")}catch(l){console.error("Error subscribing (Mobile):",l),b("Successfully subscribed (Mobile)!","Failed to subscribe. Please ensure notifications are enabled and try again.")}});const r=localStorage.getItem("lastWelcomeBackShown"),i=6*60*60*1e3,c=Date.now();(!r||c-parseInt(r)>i)&&(b("Welcome Back!","It's good to see you again. ✨😊"),localStorage.setItem("lastWelcomeBackShown",c))});let ft=document.getElementById("myChart"),ht=document.getElementById("myChart1"),Rt=document.getElementById("detailChart");async function jt(){const t=await lt();if(!t||t.length===0){k.data.datasets[0].data=[],k.data.labels=[],k.update();return}const n=t.slice().reverse(),s=n.map(e=>{const o=new Date(e.phDataReceivedAt),r=o.getFullYear(),i=String(o.getMonth()+1).padStart(2,"0"),c=String(o.getDate()).padStart(2,"0"),d=String(o.getHours()).padStart(2,"0"),m=String(o.getMinutes()).padStart(2,"0"),l=String(o.getSeconds()).padStart(2,"0");return`${r}-${i}-${c} ${d}:${m}:${l}`}),a=n.map(e=>e.phValue);k.data.datasets[0].data=a,k.data.labels=s,k.update()}function Wt(t,n){function s(e){const o=new Date(e);o.getFullYear(),String(o.getMonth()+1).padStart(2,"0"),String(o.getDate()).padStart(2,"0");const r=String(o.getHours()).padStart(2,"0"),i=String(o.getMinutes()).padStart(2,"0");return String(o.getSeconds()).padStart(2,"0"),`${r}:${i}`}const a=t.map(e=>s(e));k.data.datasets[0].data=n,k.data.labels=a,k.update()}const Ut={labels:[],datasets:[{label:"Soil pH",data:[],borderColor:"rgba(75, 192, 192, 1)",backgroundColor:"rgba(75, 192, 192, 0.2)",borderWidth:2}]},Vt={type:"line",data:Ut,options:{scales:{y:{beginAtZero:!1}}}},k=new Chart(ht,Vt);async function $t(){const t=await dt();if(!t||t.length===0){I.data.datasets[0].data=[],I.data.labels=[],I.update();return}const n=t.slice().reverse(),s=n.map(e=>{const o=new Date(e.humidityDataReceivedAt),r=o.getFullYear(),i=String(o.getMonth()+1).padStart(2,"0"),c=String(o.getDate()).padStart(2,"0"),d=String(o.getHours()).padStart(2,"0"),m=String(o.getMinutes()).padStart(2,"0"),l=String(o.getSeconds()).padStart(2,"0");return`${r}-${i}-${c} ${d}:${m}:${l}`}),a=n.map(e=>e.humidityValue);I.data.datasets[0].data=a,I.data.labels=s,I.update()}function qt(t,n){function s(e){const o=new Date(e);o.getFullYear(),String(o.getMonth()+1).padStart(2,"0"),String(o.getDate()).padStart(2,"0");const r=String(o.getHours()).padStart(2,"0"),i=String(o.getMinutes()).padStart(2,"0");return String(o.getSeconds()).padStart(2,"0"),`${r}:${i}`}const a=t.map(e=>s(e));console.log(a),I.data.datasets[0].data=n,I.data.labels=a,I.update()}const Kt={labels:[],datasets:[{label:"Soil Moisture",data:[],borderColor:"rgba(54, 162, 235, 1)",backgroundColor:"rgba(54, 162, 235, 0.2)",borderWidth:2}]},Yt={type:"line",data:Kt,options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!1}}}},I=new Chart(ft,Yt);function ct(t,n){function s(a){const e=new Date(a);e.getFullYear(),String(e.getMonth()+1).padStart(2,"0"),String(e.getDate()).padStart(2,"0");const o=String(e.getHours()).padStart(2,"0"),r=String(e.getMinutes()).padStart(2,"0");return String(e.getSeconds()).padStart(2,"0"),`${o}:${r}`}t.map(a=>s(a)),_.data.datasets[0].data=n,_.data.labels=t,_.update()}const _t=sessionStorage.getItem("humidityDetailData");let zt=_t===!0?"Soil Moisture":"Soil pH";const Jt={labels:[],datasets:[{label:zt,data:[],borderColor:"rgba(54, 162, 235, 1)",backgroundColor:"rgba(54, 162, 235, 0.2)",borderWidth:2}]},Gt={type:"line",data:Jt,options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!1}}}},_=new Chart(Rt,Gt),W=document.getElementById("main-view"),U=document.getElementById("second-view"),Qt=document.getElementById("backToMainView");ft.addEventListener("click",()=>{pt();const t={action:"getHistoryData"};h.readyState===WebSocket.OPEN&&h.send(JSON.stringify(t)),F=!0,sessionStorage.setItem("humidityDetailData","true")});ht.addEventListener("click",()=>{pt();const t={action:"getHistoryData"};h.readyState===WebSocket.OPEN&&h.send(JSON.stringify(t)),F=!1,sessionStorage.setItem("humidityDetailData","false")});Qt.addEventListener("click",()=>{Ot(),sessionStorage.removeItem("humidityDetailData")});const V=document.querySelector("#hamburger"),J=document.querySelector("#nav-menu");V.addEventListener("click",function(){V.classList.toggle("hamburger-active"),J.classList.toggle("hidden")});window.addEventListener("click",function(t){t.target!=V&&t.target!=J&&(V.classList.remove("hamburger-active"),J.classList.add("hidden"))});const $=document.getElementById("modal-container-1"),q=document.getElementById("modal-container-2"),M=document.getElementById("modal-confirm-download-container"),P=document.getElementById("modal-confirm-download-alert"),Xt=document.getElementById("modal-main"),Zt=document.getElementById("modal-main-download"),bt=document.getElementById("info-button"),yt=document.getElementById("close-modal"),x=document.getElementById("download-data"),G=document.getElementById("cancel-download"),Q=document.getElementById("get-ph-data-modal"),X=document.getElementById("get-humidity-data-modal"),N=document.getElementById("content-download-modal"),St=document.getElementById("title-download-modal");let L=null;bt.addEventListener("click",()=>{$.classList.remove("hidden"),q.classList.remove("hidden")});Q.addEventListener("click",()=>{M.classList.remove("hidden"),P.classList.remove("hidden"),L="ph",St.textContent="Download PH Data",N.textContent="Do you want to download the pH data?"});X.addEventListener("click",()=>{M.classList.remove("hidden"),P.classList.remove("hidden"),L="humidity",St.textContent="Download Humidity Data",N.textContent="Do you want to download the humidity data?"});x.addEventListener("click",()=>{L==="ph"?(x.disabled=!0,N.textContent="Mengunduh data pH...",setTimeout(async()=>{await Et()},4e3),setTimeout(()=>{x.disabled=!1,N.textContent="Data pH berhasil diunduh."},1500)):L==="humidity"&&(x.disabled=!0,N.textContent="Mengunduh data kelembapan...",setTimeout(async()=>{await Bt()},4e3),setTimeout(()=>{x.disabled=!1,N.textContent="Data humidity berhasil diunduh."},1500)),setTimeout(()=>{M.classList.add("hidden"),P.classList.add("hidden"),L=null},5e3)});G.addEventListener("click",()=>{M.classList.add("hidden"),P.classList.add("hidden"),L=null});yt.addEventListener("click",()=>{$.classList.add("hidden"),q.classList.add("hidden")});window.addEventListener("click",function(t){!M.classList.contains("hidden")&&!P.classList.contains("hidden")?!Zt.contains(t.target)&&t.target!==x&&t.target!==G&&t.target!==Q&&t.target!==X&&(M.classList.add("hidden"),P.classList.add("hidden"),L=null):!$.classList.contains("hidden")&&!q.classList.contains("hidden")&&!Xt.contains(t.target)&&t.target!==x&&t.target!==bt&&t.target!==yt&&t.target!==G&&t.target!==Q&&t.target!==X&&($.classList.add("hidden"),q.classList.add("hidden"))});flushButton.addEventListener("click",()=>{nyalakanPompa();const t={action:"pumpIsActive"};h.readyState===WebSocket.OPEN&&h.send(JSON.stringify(t))});function wt(){const t=moment(),n=t.hour(),s=t.minute(),a=t.second(),e=t.format("HH : mm : ss");document.getElementById("clock").textContent=e;let o;n<7||n===7&&s===0&&a===0?o=moment().hour(7).minute(0).second(0):o=moment().add(1,"days").hour(7).minute(0).second(0),n===7&&s===0&&a===0&&nyalakanPompa();const r=moment.duration(o.diff(t)),i=String(r.hours()).padStart(2,"0"),c=String(r.minutes()).padStart(2,"0"),d=String(r.seconds()).padStart(2,"0"),m=`${i}`,l=`${c}`,p=`${d}`;document.getElementById("countdownHour").textContent=m,document.getElementById("countdownMinute").textContent=l,document.getElementById("countdownSecond").textContent=p}setInterval(wt,1e3);wt();
