(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function d(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(e){if(e.ep)return;e.ep=!0;const o=d(e);fetch(e.href,o)}})();const et="SensorMonitorDB",ot=1,y="humidityUpdates",S="phUpdates";let p;function nt(){return new Promise((t,n)=>{const d=indexedDB.open(et,ot);d.onerror=r=>{console.error("Error opening IndexedDB:",r.target.errorCode),n(r.target.errorCode)},d.onsuccess=r=>{p=r.target.result,console.log("IndexedDB opened successfully"),t(p)},d.onupgradeneeded=r=>{const e=r.target.result;e.objectStoreNames.contains(S)||(e.createObjectStore(S,{keyPath:"id",autoIncrement:!0}),console.log(`Object store '${S}' created.`)),e.objectStoreNames.contains(y)||(e.createObjectStore(y,{keyPath:"id",autoIncrement:!0}),console.log(`Object store '${y}' created.`))}})}function at(t){if(!p){console.warn("IndexedDB not open. Cannot save pH data.");return}if(!t||typeof t!="object"){console.warn("Invalid pH data. Not saving to IndexedDB.");return}"id"in t&&delete t.id;const r=p.transaction([S],"readonly").objectStore(S).openCursor(null,"prev");r.onsuccess=e=>{const o=e.target.result;if(o){const c=o.value.phValue,u=o.value.phDataReceivedAt;if(t.phDataReceivedAt===u){console.warn("pH data with same timestamp already exists. Not saving.");return}else if(c===t.phValue){console.warn("pH data is a duplicate of the immediately previous record. Not saving.");return}}const s=p.transaction([S],"readwrite").objectStore(S).add(t);s.onsuccess=()=>{console.log("pH data successfully saved to IndexedDB.")},s.onerror=c=>{console.error("Error saving pH data to IndexedDB:",c.target.errorCode)}},r.onerror=e=>{console.error("Error checking for duplicate pH data in IndexedDB:",e.target.errorCode)}}function st(t){if(!p){console.warn("IndexedDB not open. Cannot save humidity data.");return}if(!t||typeof t!="object"){console.warn("Invalid humidity data. Not saving to IndexedDB.");return}"id"in t&&delete t.id;const r=p.transaction([y],"readonly").objectStore(y).openCursor(null,"prev");r.onsuccess=e=>{const o=e.target.result;if(o){const c=o.value.humidityValue,u=o.value.phDataReceivedAt;if(t.phDataReceivedAt===u){console.warn("pH data with same timestamp already exists. Not saving.");return}else if(c===t.humidityValue){console.warn("Humidity data is a duplicate of the immediately previous record. Not saving.");return}}const s=p.transaction([y],"readwrite").objectStore(y).add(t);s.onsuccess=()=>{console.log("Humidity data successfully saved to IndexedDB.")},s.onerror=c=>{console.error("Error saving Humidity data to IndexedDB:",c.target.errorCode)}},r.onerror=e=>{console.error("Error checking for duplicate humidityValue in IndexedDB:",e.target.errorCode)}}function z(t=8){return new Promise((n,d)=>{if(!p){console.warn("IndexedDB not open. Cannot get data."),n([]);return}const o=p.transaction([y],"readonly").objectStore(y).openCursor(null,"prev"),i=[];o.onsuccess=a=>{const s=a.target.result;s&&i.length<t?(i.push(s.value),s.continue()):n(i)},o.onerror=a=>{console.error("Error getting data from IndexedDB:",a.target.errorCode),d(a.target.errorCode)}})}function Y(t=8){return new Promise((n,d)=>{if(!p){console.warn("IndexedDB not open. Cannot get data."),n([]);return}const o=p.transaction([S],"readonly").objectStore(S).openCursor(null,"prev"),i=[];o.onsuccess=a=>{const s=a.target.result;s&&i.length<t&&(i.push(s.value),s.continue())},o.onerror=a=>{console.error("Error getting data from IndexedDB:",a.target.errorCode),d(a.target.errorCode)}})}function rt(t="ph_data.csv"){return new Promise((n,d)=>{if(!p){console.warn("IndexedDB not open. Cannot get data."),d("IndexedDB not open");return}const o=p.transaction([S],"readonly").objectStore(S).openCursor();let i=[],a=[],s=!0;o.onsuccess=c=>{const u=c.target.result;if(u){const m=u.value;s&&(a=Object.keys(m),i.push(a.join(",")),s=!1);const h=a.map(f=>{let l=m[f];return l===null||typeof l>"u"?"":typeof l=="string"&&(l.includes(",")||l.includes('"')||l.includes(`
`))?`"${l.replace(/"/g,'""')}"`:l}).join(",");i.push(h),u.continue()}else{console.log("semua data telah diiterasi");const m=i.join(`
`),h=new Blob([m],{type:"text/csv;charset=utf-8;"}),f=URL.createObjectURL(h),l=document.createElement("a");l.href=f,l.download=t,document.body.appendChild(l),l.click(),document.body.removeChild(l),URL.revokeObjectURL(f),console.log(`Data exported to ${t}`),n()}},o.onerror=c=>{console.error("Error download data from IndexedDB:",c.target.errorCode),d(c.target.errorCode)}})}function it(t="humidity_data.csv"){return new Promise((n,d)=>{if(!p){console.warn("IndexedDB not open. Cannot get data."),d("IndexedDB not open");return}const o=p.transaction([y],"readonly").objectStore(y).openCursor();let i=[],a=[],s=!0;o.onsuccess=c=>{const u=c.target.result;if(u){const m=u.value;s&&(a=Object.keys(m),i.push(a.join(",")),s=!1);const h=a.map(f=>{let l=m[f];return l===null||typeof l>"u"?"":typeof l=="string"&&(l.includes(",")||l.includes('"')||l.includes(`
`))?`"${l.replace(/"/g,'""')}"`:l}).join(",");i.push(h),u.continue()}else{console.log("semua data telah diiterasi");const m=i.join(`
`),h=new Blob([m],{type:"text/csv;charset=utf-8;"}),f=URL.createObjectURL(h),l=document.createElement("a");l.href=f,l.download=t,document.body.appendChild(l),l.click(),document.body.removeChild(l),URL.revokeObjectURL(f),console.log(`Data exported to ${t}`),n()}},o.onerror=c=>{console.error("Error download data from IndexedDB:",c.target.errorCode),d(c.target.errorCode)}})}const dt="ae2f0qpfo130e-ats.iot.ap-southeast-1.amazonaws.com",X="ap-southeast-1",ct="ap-southeast-1:66f016b1-04c1-4719-8774-bf55d732f161";AWS.config.region=X;AWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:ct});let E;const lt=async()=>{try{await new Promise((n,d)=>{AWS.config.credentials.get(r=>{r?d(r):n()})}),console.log("✅ Cognito Credentials loaded.");const t=ut.getSignedUrl(dt,X,AWS.config.credentials.accessKeyId,AWS.config.credentials.secretAccessKey,AWS.config.credentials.sessionToken);E=mqtt.connect(t,{reconnectPeriod:5e3,clientId:"webclient_"+Math.floor(Math.random()*1e4),protocol:"wss",clean:!0}),E.on("connect",()=>{console.log("✅ MQTT connected")}),E.on("error",n=>{console.error("❌ MQTT Error:",n)})}catch(t){console.error("❌ Gagal load Cognito credentials:",t)}};window.nyalakanPompa=()=>{if(!E||!E.connected){console.error("🚫 MQTT belum terkoneksi. Tidak bisa publish.");return}const t=moment().format("YYYY-MM-DD HH:mm:ss"),n=document.getElementById("flushButton");n.classList.add("opacity-80"),n.disabled=!0,n.textContent="Sending ...",setTimeout(()=>{n.textContent="Flushing ..."},2e3),setTimeout(()=>{n.classList.remove("opacity-80"),n.disabled=!1,n.textContent="Flush"},3e4);const d=JSON.stringify({action:"nyala"});E.publish("device/pompa",d,{qos:1},r=>{r?console.error("🚫 Publish error:",r):console.log("📤 Pompa nyala command dikirim pada",t)})};const ut={getSignedUrl:function(t,n,d,r,e){const o=new Date,i=o.toISOString().slice(0,10).replace(/-/g,""),a=o.toISOString().replace(/[:-]|\.\d{3}/g,""),s="iotdevicegateway",c="AWS4-HMAC-SHA256",u="GET",m="/mqtt",h=i+"/"+n+"/"+s+"/aws4_request",f="X-Amz-Algorithm="+c+"&X-Amz-Credential="+encodeURIComponent(d+"/"+h)+"&X-Amz-Date="+a+"&X-Amz-SignedHeaders=host",l="host:"+t+`
`,T=AWS.util.crypto.sha256("","hex"),N=u+`
`+m+`
`+f+`
`+l+`
host
`+T,D=c+`
`+a+`
`+h+`
`+AWS.util.crypto.sha256(N,"hex"),C=AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac("AWS4"+r,i,"buffer"),n,"buffer"),s,"buffer"),"aws4_request","buffer"),M=AWS.util.crypto.hmac(C,D,"hex");let R="wss://"+t+m+"?"+f+"&X-Amz-Signature="+M;return e&&(R+="&X-Amz-Security-Token="+encodeURIComponent(e)),R}};let v;const G=()=>{if(v&&v.readyState!==WebSocket.CLOSED&&v.readyState!==WebSocket.CLOSING){console.log("WebSocket sudah aktif. Tidak membuat koneksi baru.");return}const t="wss://chili-monitor-data.andzuru.space";v=new WebSocket(t),v.onopen=async()=>{console.log("✅ WebSocket connected to",t)},v.onmessage=n=>{try{const d=JSON.parse(n.data);console.log("📨 Data diterima:",d);const{topic:r,data:e,chartData:o,timestamp:i}=d,{ph:a,humidity:s}=o||{};let c=null;if(a&&Array.isArray(a.timestamps)&&a.timestamps.length>0){let g=a.timestamps[a.timestamps.length-1];typeof g=="string"&&g?c=new Date(g).toISOString():typeof g=="number"&&!isNaN(g)&&(g<1e10&&(g*=1e3),c=new Date(g).toISOString())}let u=null;if(s&&Array.isArray(s.timestamps)&&s.timestamps.length>0){let g=s.timestamps[s.timestamps.length-1];typeof g=="string"&&g?u=new Date(g).toISOString():typeof g=="number"&&!isNaN(g)&&(g<1e10&&(g*=1e3),u=new Date(g).toISOString())}const m=Date.now(),h=isNaN(Number(i))?0:m-Number(i),f=isNaN(Number(i))?null:new Date(Number(i)+7*60*60*1e3).toISOString(),l=new Date(m+7*60*60*1e3).toISOString();let T,N;e&&(e.Kelembapan!==void 0&&e.Kelembapan!==null&&!isNaN(parseFloat(e.Kelembapan))?(window.latestRecordHumidity={timestampCloudReceived:f,timestampBrowserReceived:l,latency:parseFloat(h),humidityValue:parseFloat(e.Kelembapan),humidityDataReceivedAt:u},T=window.latestRecordHumidity):console.log("Kelembapan tidak ada pembaharuan data"),e.Ph!==void 0&&e.Ph!==null&&!isNaN(parseFloat(e.Ph))?(window.latestRecordPh={timestampCloudReceived:f,timestampBrowserReceived:l,latency:parseFloat(h),phValue:parseFloat(e.Ph),phDataReceivedAt:c},N=window.latestRecordPh):console.log("PH tidak ada pembaharuan data"));const D=parseFloat((e==null?void 0:e.Ph)??"NaN"),C=parseFloat((e==null?void 0:e.Kelembapan)??"NaN"),M=isNaN(D)?"N/A":D.toFixed(1),R=isNaN(C)?"N/A":C.toFixed(1),V=document.getElementById("phValue"),U=document.getElementById("humidityValue"),_=document.getElementById("ground-good-status"),K=document.getElementById("ground-poor-status");if(!isNaN(D)&&!isNaN(C)&&(D>8.5||D<5.5||C>90||C<10)?(_.classList.add("hidden"),K.classList.remove("hidden")):(K.classList.add("hidden"),_.classList.remove("hidden")),V&&(V.textContent=M),U&&(U.textContent=R),o){if(a&&Array.isArray(a.timestamps)&&Array.isArray(a.values)){const g=a.timestamps.map(Number),O=a.values.map(Number);navigator.onLine?(gt(g,O),at(N)):Y(1).then(H=>{H&&H.length>0&&setTimeout(mt,200)})}if(s&&Array.isArray(s.timestamps)&&Array.isArray(s.values)){const g=s.timestamps.map(Number),O=s.values.map(Number);navigator.onLine?(yt(g,O),st(T)):z(1).then(H=>{H&&H.length>0&&setTimeout(ft,200)})}}}catch(d){console.error("❌ Error parsing WebSocket message:",d)}},v.onerror=n=>{console.error("⚠️ WebSocket error:",n)},v.onclose=n=>{console.warn(`⚠️ WebSocket disconnected. Code: ${n.code}, Reason: ${n.reason}`),setTimeout(()=>{console.log("🔁 Mencoba reconnect WebSocket..."),G()},5e3)}};document.addEventListener("DOMContentLoaded",()=>{G(),lt(),nt().then(()=>{}).catch(t=>console.error("Failed to open IndexedDB:",t))});async function mt(){const t=await Y();if(!t||t.length===0){b.data.datasets[0].data=[],b.data.labels=[],b.update();return}const n=t.slice().reverse(),d=n.map(e=>{const o=new Date(e.phDataReceivedAt),i=o.getFullYear(),a=String(o.getMonth()+1).padStart(2,"0"),s=String(o.getDate()).padStart(2,"0"),c=String(o.getHours()).padStart(2,"0"),u=String(o.getMinutes()).padStart(2,"0"),m=String(o.getSeconds()).padStart(2,"0");return`${i}-${a}-${s} ${c}:${u}:${m}`}),r=n.map(e=>e.phValue);b.data.datasets[0].data=r,b.data.labels=d,b.update()}function gt(t,n){function d(e){const o=new Date(e),i=o.getFullYear(),a=String(o.getMonth()+1).padStart(2,"0"),s=String(o.getDate()).padStart(2,"0"),c=String(o.getHours()).padStart(2,"0"),u=String(o.getMinutes()).padStart(2,"0"),m=String(o.getSeconds()).padStart(2,"0");return`${i}-${a}-${s} ${c}:${u}:${m}`}const r=t.map(e=>d(e));b.data.datasets[0].data=n,b.data.labels=r,b.update()}const pt={labels:[],datasets:[{label:"Soil pH",data:[],borderColor:"rgba(75, 192, 192, 1)",backgroundColor:"rgba(75, 192, 192, 0.2)",borderWidth:2}]},ht={type:"line",data:pt,options:{scales:{y:{beginAtZero:!1}}}},b=new Chart(document.getElementById("myChart1"),ht);async function ft(){const t=await z();if(!t||t.length===0){w.data.datasets[0].data=[],w.data.labels=[],w.update();return}const n=t.slice().reverse(),d=n.map(e=>{const o=new Date(e.humidityDataReceivedAt),i=o.getFullYear(),a=String(o.getMonth()+1).padStart(2,"0"),s=String(o.getDate()).padStart(2,"0"),c=String(o.getHours()).padStart(2,"0"),u=String(o.getMinutes()).padStart(2,"0"),m=String(o.getSeconds()).padStart(2,"0");return`${i}-${a}-${s} ${c}:${u}:${m}`}),r=n.map(e=>e.humidityValue);w.data.datasets[0].data=r,w.data.labels=d,w.update()}function yt(t,n){function d(e){const o=new Date(e),i=o.getFullYear(),a=String(o.getMonth()+1).padStart(2,"0"),s=String(o.getDate()).padStart(2,"0"),c=String(o.getHours()).padStart(2,"0"),u=String(o.getMinutes()).padStart(2,"0"),m=String(o.getSeconds()).padStart(2,"0");return`${i}-${a}-${s} ${c}:${u}:${m}`}const r=t.map(e=>d(e));console.log(r),w.data.datasets[0].data=n,w.data.labels=r,w.update()}const St={labels:[],datasets:[{label:"Soil Moisture",data:[],borderColor:"rgba(54, 162, 235, 1)",backgroundColor:"rgba(54, 162, 235, 0.2)",borderWidth:2}]},bt={type:"line",data:St,options:{scales:{y:{beginAtZero:!1}}}},w=new Chart(document.getElementById("myChart"),bt),j=document.querySelector("#hamburger"),$=document.querySelector("#nav-menu");j.addEventListener("click",function(){j.classList.toggle("hamburger-active"),$.classList.toggle("hidden")});window.addEventListener("click",function(t){t.target!=j&&t.target!=$&&(j.classList.remove("hamburger-active"),$.classList.add("hidden"))});const k=document.getElementById("modal-container-1"),P=document.getElementById("modal-container-2"),A=document.getElementById("modal-confirm-download-container"),L=document.getElementById("modal-confirm-download-alert"),wt=document.getElementById("modal-main"),vt=document.getElementById("modal-main-download"),Q=document.getElementById("info-button"),J=document.getElementById("close-modal"),I=document.getElementById("download-data"),F=document.getElementById("cancel-download"),W=document.getElementById("get-ph-data-modal"),q=document.getElementById("get-humidity-data-modal"),x=document.getElementById("content-download-modal"),Z=document.getElementById("title-download-modal");let B=null;Q.addEventListener("click",()=>{k.classList.remove("hidden"),P.classList.remove("hidden")});W.addEventListener("click",()=>{A.classList.remove("hidden"),L.classList.remove("hidden"),B="ph",Z.textContent="Download PH Data",x.textContent="Do you want to download the pH data?"});q.addEventListener("click",()=>{A.classList.remove("hidden"),L.classList.remove("hidden"),B="humidity",Z.textContent="Download Humidity Data",x.textContent="Do you want to download the humidity data?"});I.addEventListener("click",()=>{B==="ph"?(I.disabled=!0,x.textContent="Mengunduh data pH...",setTimeout(async()=>{await rt()},4e3),setTimeout(()=>{I.disabled=!1,x.textContent="Data pH berhasil diunduh."},1500)):B==="humidity"&&(I.disabled=!0,x.textContent="Mengunduh data kelembapan...",setTimeout(async()=>{await it()},4e3),setTimeout(()=>{I.disabled=!1,x.textContent="Data humidity berhasil diunduh."},1500)),setTimeout(()=>{A.classList.add("hidden"),L.classList.add("hidden"),B=null},5e3)});F.addEventListener("click",()=>{A.classList.add("hidden"),L.classList.add("hidden"),B=null});J.addEventListener("click",()=>{k.classList.add("hidden"),P.classList.add("hidden")});window.addEventListener("click",function(t){!A.classList.contains("hidden")&&!L.classList.contains("hidden")?!vt.contains(t.target)&&t.target!==I&&t.target!==F&&t.target!==W&&t.target!==q&&(A.classList.add("hidden"),L.classList.add("hidden"),B=null):!k.classList.contains("hidden")&&!P.classList.contains("hidden")&&!wt.contains(t.target)&&t.target!==I&&t.target!==Q&&t.target!==J&&t.target!==F&&t.target!==W&&t.target!==q&&(k.classList.add("hidden"),P.classList.add("hidden"))});function tt(){const t=moment(),n=t.hour(),d=t.minute(),r=t.second(),e=t.format("HH : mm : ss");document.getElementById("clock").textContent=e;let o;n<7||n===7&&d===0&&r===0?o=moment().hour(7).minute(0).second(0):o=moment().add(1,"days").hour(7).minute(0).second(0),n===7&&d===0&&r===0&&nyalakanPompa();const i=moment.duration(o.diff(t)),a=String(i.hours()).padStart(2,"0"),s=String(i.minutes()).padStart(2,"0"),c=String(i.seconds()).padStart(2,"0"),u=`${a}`,m=`${s}`,h=`${c}`;document.getElementById("countdownHour").textContent=u,document.getElementById("countdownMinute").textContent=m,document.getElementById("countdownSecond").textContent=h}setInterval(tt,1e3);tt();
