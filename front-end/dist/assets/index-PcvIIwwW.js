(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const r of e.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&a(r)}).observe(document,{childList:!0,subtree:!0});function i(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function a(t){if(t.ep)return;t.ep=!0;const e=i(t);fetch(t.href,e)}})();const _="SensorMonitorDB",Y=1,f="humidityUpdates",S="phUpdates";let g;function X(){return new Promise((o,n)=>{const i=indexedDB.open(_,Y);i.onerror=a=>{console.error("Error opening IndexedDB:",a.target.errorCode),n(a.target.errorCode)},i.onsuccess=a=>{g=a.target.result,console.log("IndexedDB opened successfully"),o(g)},i.onupgradeneeded=a=>{const t=a.target.result;t.objectStoreNames.contains(S)||(t.createObjectStore(S,{keyPath:"id",autoIncrement:!0}),console.log(`Object store '${S}' created.`)),t.objectStoreNames.contains(f)||(t.createObjectStore(f,{keyPath:"id",autoIncrement:!0}),console.log(`Object store '${f}' created.`))}})}function G(o){if(!g){console.warn("IndexedDB not open. Cannot save pH data.");return}if(!o||typeof o!="object"){console.warn("Invalid pH data. Not saving to IndexedDB.");return}"id"in o&&delete o.id;const a=g.transaction([S],"readonly").objectStore(S).openCursor(null,"prev");let t=!1;a.onsuccess=e=>{const r=e.target.result;if(r){if(r.value.phValue===o.phValue){t=!0;return}r.continue()}else if(!t){const d=g.transaction([S],"readwrite").objectStore(S).add(o);d.onsuccess=()=>{},d.onerror=u=>{console.error("Error saving pH data to IndexedDB:",u.target.errorCode)}}},a.onerror=e=>{console.error("Error checking for duplicate pH data in IndexedDB:",e.target.errorCode)}}function Q(o){if(!g){console.warn("IndexedDB not open. Cannot save humidity data.");return}if(!o||typeof o!="object"){console.warn("Invalid humidity data. Not saving to IndexedDB.");return}"id"in o&&delete o.id;const a=g.transaction([f],"readonly").objectStore(f).openCursor(null,"prev");let t=!1;a.onsuccess=e=>{const r=e.target.result;if(r){if(r.value.humidityValue===o.humidityValue){t=!0;return}r.continue()}else if(!t){const d=g.transaction([f],"readwrite").objectStore(f).add(o);d.onsuccess=()=>{},d.onerror=u=>{console.error("Error saving humidity data to IndexedDB:",u.target.errorCode)}}},a.onerror=e=>{console.error("Error checking for duplicate phValue in IndexedDB:",e.target.errorCode)}}function j(o=8){return new Promise((n,i)=>{if(!g){console.warn("IndexedDB not open. Cannot get data."),n([]);return}const e=g.transaction([f],"readonly").objectStore(f).openCursor(null,"prev"),r=[];e.onsuccess=s=>{const c=s.target.result;c&&r.length<o?(r.push(c.value),c.continue()):n(r)},e.onerror=s=>{console.error("Error getting data from IndexedDB:",s.target.errorCode),i(s.target.errorCode)}})}function q(o=8){return new Promise((n,i)=>{if(!g){console.warn("IndexedDB not open. Cannot get data."),n([]);return}const e=g.transaction([S],"readonly").objectStore(S).openCursor(null,"prev"),r=[];e.onsuccess=s=>{const c=s.target.result;c&&r.length<o?(r.push(c.value),c.continue()):n(r)},e.onerror=s=>{console.error("Error getting data from IndexedDB:",s.target.errorCode),i(s.target.errorCode)}})}const J="a2spluztzgsdhl-ats.iot.ap-southeast-1.amazonaws.com",V="ap-southeast-1",Z="ap-southeast-1:e9f502ea-58c5-459a-bfa3-3ce6e1fc9bff";AWS.config.region=V;AWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:Z});let v;const tt=async()=>{try{await new Promise((n,i)=>{AWS.config.credentials.get(a=>{a?i(a):n()})}),console.log("✅ Cognito Credentials loaded.");const o=et.getSignedUrl(J,V,AWS.config.credentials.accessKeyId,AWS.config.credentials.secretAccessKey,AWS.config.credentials.sessionToken);v=mqtt.connect(o,{reconnectPeriod:5e3,clientId:"webclient_"+Math.floor(Math.random()*1e4),protocol:"wss",clean:!0}),v.on("connect",()=>{console.log("✅ MQTT connected")}),v.on("error",n=>{console.error("❌ MQTT Error:",n)})}catch(o){console.error("❌ Gagal load Cognito credentials:",o)}};window.nyalakanPompa=()=>{if(!v||!v.connected){console.error("🚫 MQTT belum terkoneksi. Tidak bisa publish.");return}const o=moment().format("YYYY-MM-DD HH:mm:ss"),n=document.getElementById("flushButton");n.classList.add("opacity-80"),n.disabled=!0,n.textContent="Sending ...",setTimeout(()=>{n.textContent="Flushing ..."},2e3),setTimeout(()=>{n.classList.remove("opacity-80"),n.disabled=!1,n.textContent="Flush"},3e4);const i=JSON.stringify({action:"nyala"});v.publish("device/pompa",i,{qos:1},a=>{a?console.error("🚫 Publish error:",a):console.log("📤 Pompa nyala command dikirim pada",o)})};const et={getSignedUrl:function(o,n,i,a,t){const e=new Date,r=e.toISOString().slice(0,10).replace(/-/g,""),s=e.toISOString().replace(/[:-]|\.\d{3}/g,""),c="iotdevicegateway",d="AWS4-HMAC-SHA256",u="GET",m="/mqtt",b=r+"/"+n+"/"+c+"/aws4_request",C="X-Amz-Algorithm="+d+"&X-Amz-Credential="+encodeURIComponent(i+"/"+b)+"&X-Amz-Date="+s+"&X-Amz-SignedHeaders=host",I="host:"+o+`
`,N=AWS.util.crypto.sha256("","hex"),E=u+`
`+m+`
`+C+`
`+I+`
host
`+N,w=d+`
`+s+`
`+b+`
`+AWS.util.crypto.sha256(E,"hex"),D=AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac(AWS.util.crypto.hmac("AWS4"+a,r,"buffer"),n,"buffer"),c,"buffer"),"aws4_request","buffer"),T=AWS.util.crypto.hmac(D,w,"hex");let B="wss://"+o+m+"?"+C+"&X-Amz-Signature="+T;return t&&(B+="&X-Amz-Security-Token="+encodeURIComponent(t)),B}};let y;const z=()=>{if(y&&y.readyState!==WebSocket.CLOSED&&y.readyState!==WebSocket.CLOSING){console.log("WebSocket sudah aktif. Tidak membuat koneksi baru.");return}const o="wss://chili-monitor.andzuru.space";y=new WebSocket(o),y.onopen=async()=>{console.log("✅ WebSocket connected to",o),await W(),await F()},y.onmessage=n=>{try{const i=JSON.parse(n.data);console.log("📨 Data diterima:",i);const{topic:a,data:t,chartData:e,timestamp:r}=i,{ph:s,humidity:c}=e||{};let d=null;if(s&&Array.isArray(s.timestamps)&&s.timestamps.length>0){let l=s.timestamps[s.timestamps.length-1];typeof l=="string"&&l?d=new Date(l).toISOString():typeof l=="number"&&!isNaN(l)&&(l<1e10&&(l*=1e3),d=new Date(l).toISOString())}let u=null;if(c&&Array.isArray(c.timestamps)&&c.timestamps.length>0){let l=c.timestamps[c.timestamps.length-1];typeof l=="string"&&l?u=new Date(l).toISOString():typeof l=="number"&&!isNaN(l)&&(l<1e10&&(l*=1e3),u=new Date(l).toISOString())}const m=new Date(Date.now()+7*60*60*1e3),b=m.toISOString(),C=Number(r),I=isNaN(C)?0:Number(m)-C;let N,E;t&&(t.Kelembapan!==void 0&&t.Kelembapan!==null&&!isNaN(parseFloat(t.Kelembapan))?(window.latestRecordHumidity={timestampCloudReceived:r,timestampBrowserReceived:b,latency:parseFloat(I),humidityValue:parseFloat(t.Kelembapan),humidityDataReceivedAt:u},N=window.latestRecordHumidity):console.log("Kelembapan tidak ada pembaharuan data"),t.Ph!==void 0&&t.Ph!==null&&!isNaN(parseFloat(t.Ph))?(window.latestRecordPh={timestampCloudReceived:r,timestampBrowserReceived:b,latency:parseFloat(I),phValue:parseFloat(t.Ph),phDataReceivedAt:d},E=window.latestRecordPh):console.log("PH tidak ada pembaharuan data"));const w=parseFloat((t==null?void 0:t.Ph)??"NaN"),D=parseFloat((t==null?void 0:t.Kelembapan)??"NaN"),T=isNaN(w)?"N/A":w.toFixed(1),B=isNaN(D)?"N/A":D.toFixed(1),M=document.getElementById("phValue"),$=document.getElementById("humidityValue"),O=document.getElementById("ground-good-status"),R=document.getElementById("ground-poor-status");if(!isNaN(w)&&!isNaN(D)&&(w>8.5||w<5.5||D>90||D<10)?(O.classList.add("hidden"),R.classList.remove("hidden")):(R.classList.add("hidden"),O.classList.remove("hidden")),M&&(M.textContent=T),$&&($.textContent=B),e){if(s&&Array.isArray(s.timestamps)&&Array.isArray(s.values)){const l=s.timestamps.map(Number),H=s.values.map(Number);navigator.onLine?(ot(l,H),G(E)):q(1).then(A=>{A&&A.length>0&&setTimeout(W,200)})}if(c&&Array.isArray(c.timestamps)&&Array.isArray(c.values)){const l=c.timestamps.map(Number),H=c.values.map(Number);navigator.onLine?(rt(l,H),Q(N)):j(1).then(A=>{A&&A.length>0&&setTimeout(F,200)})}}}catch(i){console.error("❌ Error parsing WebSocket message:",i)}},y.onerror=n=>{console.error("⚠️ WebSocket error:",n)},y.onclose=n=>{console.warn(`⚠️ WebSocket disconnected. Code: ${n.code}, Reason: ${n.reason}`),setTimeout(()=>{console.log("🔁 Mencoba reconnect WebSocket..."),z()},5e3)}};document.addEventListener("DOMContentLoaded",()=>{z(),tt(),X().then(()=>{}).catch(o=>console.error("Failed to open IndexedDB:",o))});async function W(){const o=await q();if(!o||o.length===0){p.data.datasets[0].data=[],p.data.labels=[],p.update();return}const n=o.slice().reverse(),i=n.map(t=>{const e=new Date(t.phDataReceivedAt),r=e.getFullYear(),s=String(e.getMonth()+1).padStart(2,"0"),c=String(e.getDate()).padStart(2,"0"),d=String(e.getHours()).padStart(2,"0"),u=String(e.getMinutes()).padStart(2,"0"),m=String(e.getSeconds()).padStart(2,"0");return`${r}-${s}-${c} ${d}:${u}:${m}`}),a=n.map(t=>t.phValue);p.data.datasets[0].data=a,p.data.labels=i,p.update()}function ot(o,n){function i(t){const e=new Date(t),r=e.getFullYear(),s=String(e.getMonth()+1).padStart(2,"0"),c=String(e.getDate()).padStart(2,"0"),d=String(e.getHours()).padStart(2,"0"),u=String(e.getMinutes()).padStart(2,"0"),m=String(e.getSeconds()).padStart(2,"0");return`${r}-${s}-${c} ${d}:${u}:${m}`}const a=o.map(t=>i(t));p.data.datasets[0].data=n,p.data.labels=a,p.update()}const nt={labels:[],datasets:[{label:"Soil pH",data:[],borderColor:"rgba(75, 192, 192, 1)",backgroundColor:"rgba(75, 192, 192, 0.2)",borderWidth:2}]},at={type:"line",data:nt,options:{scales:{y:{beginAtZero:!1}}}},p=new Chart(document.getElementById("myChart1"),at);async function F(){const o=await j();if(!o||o.length===0){h.data.datasets[0].data=[],h.data.labels=[],h.update();return}const n=o.slice().reverse(),i=n.map(t=>{const e=new Date(t.humidityDataReceivedAt),r=e.getFullYear(),s=String(e.getMonth()+1).padStart(2,"0"),c=String(e.getDate()).padStart(2,"0"),d=String(e.getHours()).padStart(2,"0"),u=String(e.getMinutes()).padStart(2,"0"),m=String(e.getSeconds()).padStart(2,"0");return`${r}-${s}-${c} ${d}:${u}:${m}`}),a=n.map(t=>t.humidityValue);h.data.datasets[0].data=a,h.data.labels=i,h.update()}function rt(o,n){function i(t){const e=new Date(t),r=e.getFullYear(),s=String(e.getMonth()+1).padStart(2,"0"),c=String(e.getDate()).padStart(2,"0"),d=String(e.getHours()).padStart(2,"0"),u=String(e.getMinutes()).padStart(2,"0"),m=String(e.getSeconds()).padStart(2,"0");return`${r}-${s}-${c} ${d}:${u}:${m}`}const a=o.map(t=>i(t));console.log(a),h.data.datasets[0].data=n,h.data.labels=a,h.update()}const st={labels:[],datasets:[{label:"Soil Moisture",data:[],borderColor:"rgba(54, 162, 235, 1)",backgroundColor:"rgba(54, 162, 235, 0.2)",borderWidth:2}]},it={type:"line",data:st,options:{scales:{y:{beginAtZero:!1}}}},h=new Chart(document.getElementById("myChart"),it),x=document.querySelector("#hamburger"),P=document.querySelector("#nav-menu");x.addEventListener("click",function(){x.classList.toggle("hamburger-active"),P.classList.toggle("hidden")});window.addEventListener("click",function(o){o.target!=x&&o.target!=P&&(x.classList.remove("hamburger-active"),P.classList.add("hidden"))});const L=document.getElementById("modal-container-1"),k=document.getElementById("modal-container-2"),ct=document.getElementById("modal-main"),K=document.getElementById("info-button"),dt=document.getElementById("close-modal");K.addEventListener("click",()=>{L.classList.remove("hidden"),k.classList.remove("hidden")});dt.addEventListener("click",()=>{L.classList.add("hidden"),k.classList.add("hidden")});window.addEventListener("click",function(o){!ct.contains(o.target)&&!K.contains(o.target)&&(L.classList.add("hidden"),k.classList.add("hidden"))});function U(){const o=moment(),n=o.hour(),i=o.minute(),a=o.second(),t=o.format("HH : mm : ss");document.getElementById("clock").textContent=t;let e;n<7||n===7&&i===0&&a===0?e=moment().hour(7).minute(0).second(0):e=moment().add(1,"days").hour(7).minute(0).second(0),n===7&&i===0&&a===0&&nyalakanPompa();const r=moment.duration(e.diff(o)),s=String(r.hours()).padStart(2,"0"),c=String(r.minutes()).padStart(2,"0"),d=String(r.seconds()).padStart(2,"0"),u=`${s}`,m=`${c}`,b=`${d}`;document.getElementById("countdownHour").textContent=u,document.getElementById("countdownMinute").textContent=m,document.getElementById("countdownSecond").textContent=b}setInterval(U,1e3);U();
